language: java
script: "mvn clean verify"

services:
  - docker

env:
  global:
    - CACHE_DIR=$HOME/docker
    - APIM_DOCKER_IMAGE=docker-registry.demo.axway.com/swagger-promote/api-mgr-with-policies:7.7-20200130
    - CASSANDRA_DOCKER_IMAGE=cassandra:2.2.12
    - CACHE_FILE_APIM=$CACHE_DIR/api-manager_7_7_20200130.cache.tar.gz
    - CACHE_FILE_CASSANDRA=$CACHE_DIR/cassandra_2_2_12.cache.tar.gz
    - counter=0

cache:
  directories:
    - $CACHE_DIR
    - '$HOME/.m2/repository'

before_install:
  # Avoid installation if unit-tests fail anyway
  - mvn clean test

  - "sudo cat /etc/docker/daemon.json | jq '. + {\"insecure-registries\": [\"docker-registry.demo.axway.com\"]}' | sudo tee /etc/docker/daemon.json"
  - if [ ! -f $CACHE_FILE_APIM ]; then sudo cat /etc/default/docker; fi
  - if [ ! -f $CACHE_FILE_APIM ]; then echo \"Restarting Docker-Daemon\"; sudo service docker restart; sudo systemctl status docker.service; sudo journalctl -xe; fi

  #- sudo apt-get update
  #- sudo apt-get install curl
  # All files in this folder will be cached for the next build
  - mkdir -p $CACHE_DIR
  # Login to the Docker-Registry
  - if [ ! -f $CACHE_FILE_APIM ]; then docker login --username $AXWAY_DOCKER_REG_USER --password $AXWAY_DOCKER_REG_PASS docker-registry.demo.axway.com; fi
  # Downloading the APIM-Docker-Image takes too long (Timeout 10 minutes) - Externalized to make use of travis_wait
  # In this script, we are either using the cached version or download a new Docker-Image
  - travis_wait build/pull_apim_docker_image.sh $CACHE_FILE_APIM
  # Now it's time to safe the downloaded API-Management Docker-Image into the cache folder
  - if [ ! -f $CACHE_FILE_APIM ]; then docker save $APIM_DOCKER_IMAGE | gzip > $CACHE_FILE_APIM; fi
  # Pull Cassandra Image or use the cache
  - travis_wait build/pull_cassandra_docker_image.sh
  # Safe Cassandra image inc cache file
  - if [ ! -f $CACHE_FILE_CASSANDRA ]; then docker save $CASSANDRA_DOCKER_IMAGE | gzip > $CACHE_FILE_CASSANDRA; fi

install:
  # Start Cassandra and wait that port 9042 is reachable
  - docker-compose run --rm start_cassandra
  # Start the API-Gateway + API-Manager
  - docker-compose run --rm start_apimgmt
  # Give API-Manager a moment to start
  - docker-compose logs --tail 30 apimgmt

after_failure:
  - docker-compose logs --tail 1000 apimgmt
