{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "OData Service",
    "description" : "The OData Service from https://services.odata.org/V2/(S(owef4vwcosio0xpu1glpf320))/OData/OData.svc/$metadata",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://myhost.customer.com:8767/api/v1/myAPI/"
  } ],
  "paths" : {
    "/CreateBusinessPartnerWithConsent" : {
      "post" : {
        "tags" : [ "Service operations" ],
        "operationId" : "CreateBusinessPartnerWithConsent",
        "parameters" : [ {
          "name" : "DataSubjectId",
          "in" : "query",
          "required" : false,
          "schema" : {
            "maxLength" : 128,
            "type" : "string"
          }
        }, {
          "name" : "TemplateName",
          "in" : "query",
          "required" : true,
          "schema" : {
            "maxLength" : 30,
            "type" : "string"
          }
        }, {
          "name" : "LanguageCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "maxLength" : 5,
            "type" : "string"
          }
        }, {
          "name" : "DataSubjectTypeName",
          "in" : "query",
          "required" : true,
          "schema" : {
            "maxLength" : 30,
            "type" : "string"
          }
        }, {
          "name" : "DataSubjectDescription",
          "in" : "query",
          "required" : false,
          "schema" : {
            "maxLength" : 255,
            "type" : "string"
          }
        }, {
          "name" : "ValidFrom",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "GrantedBy",
          "in" : "query",
          "required" : false,
          "schema" : {
            "maxLength" : 128,
            "type" : "string"
          }
        }, {
          "name" : "GrantedAt",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "SubmissionSite",
          "in" : "query",
          "required" : false,
          "schema" : {
            "maxLength" : 128,
            "type" : "string"
          }
        }, {
          "name" : "BusinessPartner",
          "in" : "query",
          "required" : false,
          "schema" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }, {
          "name" : "AuthorizationGroup",
          "in" : "query",
          "required" : true,
          "schema" : {
            "maxLength" : 4,
            "type" : "string"
          }
        }, {
          "name" : "Category",
          "in" : "query",
          "required" : true,
          "schema" : {
            "maxLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "LastName",
          "in" : "query",
          "required" : false,
          "schema" : {
            "maxLength" : 40,
            "type" : "string"
          }
        }, {
          "name" : "OrganizationName",
          "in" : "query",
          "required" : false,
          "schema" : {
            "maxLength" : 40,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "BusinessPartnerWithConsent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BusinessPartnerWithConsent"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Address*" : {
      "get" : {
        "tags" : [ "Address" ],
        "summary" : "Get Address",
        "description" : "Returns the entity: Address. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Address supports the following navigational properties: [to_WorkplaceAddress, to_Email, to_MobilePhone, to_LandlinePhone, to_Fax, to_Web, to_PostalAddress, to_Person, to_Organization, to_DefaultPostalAddress, to_DefaultEmail, to_DefaultMobilePhone, to_DefaultLandlinePhone, to_DefaultFax, to_DefaultWeb, to_DefaultPerson, to_DefaultOrganization, to_DefaultWorkplaceAddress, to_Parent]<br />For example: .../Address(Entity-Id)/<b>to_WorkplaceAddress</b>/.....",
        "operationId" : "getAddress",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WorkplaceAddress"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "AddressType"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "AddressType"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Address",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Address"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Address({Id})*" : {
      "get" : {
        "tags" : [ "Address" ],
        "summary" : "Get Address on Id",
        "description" : "Returns the entity: Address. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Address supports the following navigational properties: [to_WorkplaceAddress, to_Email, to_MobilePhone, to_LandlinePhone, to_Fax, to_Web, to_PostalAddress, to_Person, to_Organization, to_DefaultPostalAddress, to_DefaultEmail, to_DefaultMobilePhone, to_DefaultLandlinePhone, to_DefaultFax, to_DefaultWeb, to_DefaultPerson, to_DefaultOrganization, to_DefaultWorkplaceAddress, to_Parent]<br />For example: .../Address(Entity-Id)/<b>to_WorkplaceAddress</b>/.....",
        "operationId" : "getAddressId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WorkplaceAddress"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "AddressType"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Address",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Address"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Address" ],
        "summary" : "Create a new entity Address",
        "description" : "Create a new entity in EntitySet: Address",
        "operationId" : "createAddress",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Address"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Address",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Address" ],
        "summary" : "Delete Address",
        "description" : "Delete entity in EntitySet Address",
        "operationId" : "deleteAddress",
        "responses" : {
          "204" : {
            "description" : "EntitySet Address successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Address" ],
        "summary" : "Update entity Address",
        "description" : "Update an existing entity in EntitySet: Address",
        "operationId" : "updateAddress",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Address"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Address",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentCommunication*" : {
      "get" : {
        "tags" : [ "AddressIndependentCommunication" ],
        "summary" : "Get AddressIndependentCommunication",
        "description" : "Returns the entity: AddressIndependentCommunication. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentCommunication supports the following navigational properties: [to_AddressIndependentLandlinePhone, to_AddressIndependentMobilePhone, to_AddressIndependentFax, to_AddressIndependentEmail, to_AddressIndependentWeb]<br />For example: .../AddressIndependentCommunication(Entity-Id)/<b>to_AddressIndependentLandlinePhone</b>/.....",
        "operationId" : "getAddressIndependentCommunication",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_AddressIndependentLandlinePhone"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentCommunication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentCommunication"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentCommunication({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentCommunication" ],
        "summary" : "Get AddressIndependentCommunication on Id",
        "description" : "Returns the entity: AddressIndependentCommunication. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentCommunication supports the following navigational properties: [to_AddressIndependentLandlinePhone, to_AddressIndependentMobilePhone, to_AddressIndependentFax, to_AddressIndependentEmail, to_AddressIndependentWeb]<br />For example: .../AddressIndependentCommunication(Entity-Id)/<b>to_AddressIndependentLandlinePhone</b>/.....",
        "operationId" : "getAddressIndependentCommunicationId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_AddressIndependentLandlinePhone"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentCommunication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentCommunication"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentCommunication" ],
        "summary" : "Create a new entity AddressIndependentCommunication",
        "description" : "Create a new entity in EntitySet: AddressIndependentCommunication",
        "operationId" : "createAddressIndependentCommunication",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentCommunication"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentCommunication",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentCommunication" ],
        "summary" : "Delete AddressIndependentCommunication",
        "description" : "Delete entity in EntitySet AddressIndependentCommunication",
        "operationId" : "deleteAddressIndependentCommunication",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentCommunication successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentCommunication" ],
        "summary" : "Update entity AddressIndependentCommunication",
        "description" : "Update an existing entity in EntitySet: AddressIndependentCommunication",
        "operationId" : "updateAddressIndependentCommunication",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentCommunication"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentCommunication",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentEmail*" : {
      "get" : {
        "tags" : [ "AddressIndependentEmail" ],
        "summary" : "Get AddressIndependentEmail",
        "description" : "Returns the entity: AddressIndependentEmail. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentEmail supports the following navigational properties: [to_EmailNote, to_Parent]<br />For example: .../AddressIndependentEmail(Entity-Id)/<b>to_EmailNote</b>/.....",
        "operationId" : "getAddressIndependentEmail",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_EmailNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentEmail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentEmail"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentEmail({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentEmail" ],
        "summary" : "Get AddressIndependentEmail on Id",
        "description" : "Returns the entity: AddressIndependentEmail. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentEmail supports the following navigational properties: [to_EmailNote, to_Parent]<br />For example: .../AddressIndependentEmail(Entity-Id)/<b>to_EmailNote</b>/.....",
        "operationId" : "getAddressIndependentEmailId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_EmailNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentEmail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentEmail"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentEmail" ],
        "summary" : "Create a new entity AddressIndependentEmail",
        "description" : "Create a new entity in EntitySet: AddressIndependentEmail",
        "operationId" : "createAddressIndependentEmail",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentEmail",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentEmail" ],
        "summary" : "Delete AddressIndependentEmail",
        "description" : "Delete entity in EntitySet AddressIndependentEmail",
        "operationId" : "deleteAddressIndependentEmail",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentEmail successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentEmail" ],
        "summary" : "Update entity AddressIndependentEmail",
        "description" : "Update an existing entity in EntitySet: AddressIndependentEmail",
        "operationId" : "updateAddressIndependentEmail",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentEmail",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentEmailAddressDummy*" : {
      "get" : {
        "tags" : [ "AddressIndependentEmailAddressDummy" ],
        "summary" : "Get AddressIndependentEmailAddressDummy",
        "description" : "Returns the entity: AddressIndependentEmailAddressDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentEmailAddressDummy supports the following navigational properties: [to_EmailNote, to_Parent]<br />For example: .../AddressIndependentEmailAddressDummy(Entity-Id)/<b>to_EmailNote</b>/.....",
        "operationId" : "getAddressIndependentEmailAddressDummy",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_EmailNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentEmailAddressDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentEmailAddressDummy"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentEmailAddressDummy({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentEmailAddressDummy" ],
        "summary" : "Get AddressIndependentEmailAddressDummy on Id",
        "description" : "Returns the entity: AddressIndependentEmailAddressDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentEmailAddressDummy supports the following navigational properties: [to_EmailNote, to_Parent]<br />For example: .../AddressIndependentEmailAddressDummy(Entity-Id)/<b>to_EmailNote</b>/.....",
        "operationId" : "getAddressIndependentEmailAddressDummyId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_EmailNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentEmailAddressDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentEmailAddressDummy"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentEmailAddressDummy" ],
        "summary" : "Create a new entity AddressIndependentEmailAddressDummy",
        "description" : "Create a new entity in EntitySet: AddressIndependentEmailAddressDummy",
        "operationId" : "createAddressIndependentEmailAddressDummy",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentEmailAddressDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentEmailAddressDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentEmailAddressDummy" ],
        "summary" : "Delete AddressIndependentEmailAddressDummy",
        "description" : "Delete entity in EntitySet AddressIndependentEmailAddressDummy",
        "operationId" : "deleteAddressIndependentEmailAddressDummy",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentEmailAddressDummy successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentEmailAddressDummy" ],
        "summary" : "Update entity AddressIndependentEmailAddressDummy",
        "description" : "Update an existing entity in EntitySet: AddressIndependentEmailAddressDummy",
        "operationId" : "updateAddressIndependentEmailAddressDummy",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentEmailAddressDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentEmailAddressDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentFaxNumber*" : {
      "get" : {
        "tags" : [ "AddressIndependentFaxNumber" ],
        "summary" : "Get AddressIndependentFaxNumber",
        "description" : "Returns the entity: AddressIndependentFaxNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentFaxNumber supports the following navigational properties: [to_FaxNote, to_Parent]<br />For example: .../AddressIndependentFaxNumber(Entity-Id)/<b>to_FaxNote</b>/.....",
        "operationId" : "getAddressIndependentFaxNumber",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_FaxNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentFaxNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentFaxNumber"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentFaxNumber({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentFaxNumber" ],
        "summary" : "Get AddressIndependentFaxNumber on Id",
        "description" : "Returns the entity: AddressIndependentFaxNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentFaxNumber supports the following navigational properties: [to_FaxNote, to_Parent]<br />For example: .../AddressIndependentFaxNumber(Entity-Id)/<b>to_FaxNote</b>/.....",
        "operationId" : "getAddressIndependentFaxNumberId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_FaxNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentFaxNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentFaxNumber"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentFaxNumber" ],
        "summary" : "Create a new entity AddressIndependentFaxNumber",
        "description" : "Create a new entity in EntitySet: AddressIndependentFaxNumber",
        "operationId" : "createAddressIndependentFaxNumber",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentFaxNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentFaxNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentFaxNumber" ],
        "summary" : "Delete AddressIndependentFaxNumber",
        "description" : "Delete entity in EntitySet AddressIndependentFaxNumber",
        "operationId" : "deleteAddressIndependentFaxNumber",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentFaxNumber successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentFaxNumber" ],
        "summary" : "Update entity AddressIndependentFaxNumber",
        "description" : "Update an existing entity in EntitySet: AddressIndependentFaxNumber",
        "operationId" : "updateAddressIndependentFaxNumber",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentFaxNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentFaxNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentFaxNumberDummy*" : {
      "get" : {
        "tags" : [ "AddressIndependentFaxNumberDummy" ],
        "summary" : "Get AddressIndependentFaxNumberDummy",
        "description" : "Returns the entity: AddressIndependentFaxNumberDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentFaxNumberDummy supports the following navigational properties: [to_FaxNote, to_Parent]<br />For example: .../AddressIndependentFaxNumberDummy(Entity-Id)/<b>to_FaxNote</b>/.....",
        "operationId" : "getAddressIndependentFaxNumberDummy",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_FaxNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentFaxNumberDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentFaxNumberDummy"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentFaxNumberDummy({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentFaxNumberDummy" ],
        "summary" : "Get AddressIndependentFaxNumberDummy on Id",
        "description" : "Returns the entity: AddressIndependentFaxNumberDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentFaxNumberDummy supports the following navigational properties: [to_FaxNote, to_Parent]<br />For example: .../AddressIndependentFaxNumberDummy(Entity-Id)/<b>to_FaxNote</b>/.....",
        "operationId" : "getAddressIndependentFaxNumberDummyId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_FaxNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentFaxNumberDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentFaxNumberDummy"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentFaxNumberDummy" ],
        "summary" : "Create a new entity AddressIndependentFaxNumberDummy",
        "description" : "Create a new entity in EntitySet: AddressIndependentFaxNumberDummy",
        "operationId" : "createAddressIndependentFaxNumberDummy",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentFaxNumberDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentFaxNumberDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentFaxNumberDummy" ],
        "summary" : "Delete AddressIndependentFaxNumberDummy",
        "description" : "Delete entity in EntitySet AddressIndependentFaxNumberDummy",
        "operationId" : "deleteAddressIndependentFaxNumberDummy",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentFaxNumberDummy successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentFaxNumberDummy" ],
        "summary" : "Update entity AddressIndependentFaxNumberDummy",
        "description" : "Update an existing entity in EntitySet: AddressIndependentFaxNumberDummy",
        "operationId" : "updateAddressIndependentFaxNumberDummy",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentFaxNumberDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentFaxNumberDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentPhoneNumber*" : {
      "get" : {
        "tags" : [ "AddressIndependentPhoneNumber" ],
        "summary" : "Get AddressIndependentPhoneNumber",
        "description" : "Returns the entity: AddressIndependentPhoneNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentPhoneNumber supports the following navigational properties: [to_PhoneNote, to_Parent]<br />For example: .../AddressIndependentPhoneNumber(Entity-Id)/<b>to_PhoneNote</b>/.....",
        "operationId" : "getAddressIndependentPhoneNumber",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_PhoneNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentPhoneNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentPhoneNumber"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentPhoneNumber({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentPhoneNumber" ],
        "summary" : "Get AddressIndependentPhoneNumber on Id",
        "description" : "Returns the entity: AddressIndependentPhoneNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentPhoneNumber supports the following navigational properties: [to_PhoneNote, to_Parent]<br />For example: .../AddressIndependentPhoneNumber(Entity-Id)/<b>to_PhoneNote</b>/.....",
        "operationId" : "getAddressIndependentPhoneNumberId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_PhoneNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentPhoneNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentPhoneNumber"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentPhoneNumber" ],
        "summary" : "Create a new entity AddressIndependentPhoneNumber",
        "description" : "Create a new entity in EntitySet: AddressIndependentPhoneNumber",
        "operationId" : "createAddressIndependentPhoneNumber",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentPhoneNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentPhoneNumber" ],
        "summary" : "Delete AddressIndependentPhoneNumber",
        "description" : "Delete entity in EntitySet AddressIndependentPhoneNumber",
        "operationId" : "deleteAddressIndependentPhoneNumber",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentPhoneNumber successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentPhoneNumber" ],
        "summary" : "Update entity AddressIndependentPhoneNumber",
        "description" : "Update an existing entity in EntitySet: AddressIndependentPhoneNumber",
        "operationId" : "updateAddressIndependentPhoneNumber",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentPhoneNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentPhoneNumberDummy*" : {
      "get" : {
        "tags" : [ "AddressIndependentPhoneNumberDummy" ],
        "summary" : "Get AddressIndependentPhoneNumberDummy",
        "description" : "Returns the entity: AddressIndependentPhoneNumberDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentPhoneNumberDummy supports the following navigational properties: [to_PhoneNote, to_Parent]<br />For example: .../AddressIndependentPhoneNumberDummy(Entity-Id)/<b>to_PhoneNote</b>/.....",
        "operationId" : "getAddressIndependentPhoneNumberDummy",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_PhoneNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentPhoneNumberDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentPhoneNumberDummy"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentPhoneNumberDummy({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentPhoneNumberDummy" ],
        "summary" : "Get AddressIndependentPhoneNumberDummy on Id",
        "description" : "Returns the entity: AddressIndependentPhoneNumberDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentPhoneNumberDummy supports the following navigational properties: [to_PhoneNote, to_Parent]<br />For example: .../AddressIndependentPhoneNumberDummy(Entity-Id)/<b>to_PhoneNote</b>/.....",
        "operationId" : "getAddressIndependentPhoneNumberDummyId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_PhoneNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentPhoneNumberDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentPhoneNumberDummy"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentPhoneNumberDummy" ],
        "summary" : "Create a new entity AddressIndependentPhoneNumberDummy",
        "description" : "Create a new entity in EntitySet: AddressIndependentPhoneNumberDummy",
        "operationId" : "createAddressIndependentPhoneNumberDummy",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentPhoneNumberDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentPhoneNumberDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentPhoneNumberDummy" ],
        "summary" : "Delete AddressIndependentPhoneNumberDummy",
        "description" : "Delete entity in EntitySet AddressIndependentPhoneNumberDummy",
        "operationId" : "deleteAddressIndependentPhoneNumberDummy",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentPhoneNumberDummy successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentPhoneNumberDummy" ],
        "summary" : "Update entity AddressIndependentPhoneNumberDummy",
        "description" : "Update an existing entity in EntitySet: AddressIndependentPhoneNumberDummy",
        "operationId" : "updateAddressIndependentPhoneNumberDummy",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentPhoneNumberDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentPhoneNumberDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentWeb*" : {
      "get" : {
        "tags" : [ "AddressIndependentWeb" ],
        "summary" : "Get AddressIndependentWeb",
        "description" : "Returns the entity: AddressIndependentWeb. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentWeb supports the following navigational properties: [to_WebNote, to_Parent]<br />For example: .../AddressIndependentWeb(Entity-Id)/<b>to_WebNote</b>/.....",
        "operationId" : "getAddressIndependentWeb",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WebNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentWeb",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentWeb"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentWeb({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentWeb" ],
        "summary" : "Get AddressIndependentWeb on Id",
        "description" : "Returns the entity: AddressIndependentWeb. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentWeb supports the following navigational properties: [to_WebNote, to_Parent]<br />For example: .../AddressIndependentWeb(Entity-Id)/<b>to_WebNote</b>/.....",
        "operationId" : "getAddressIndependentWebId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WebNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentWeb",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentWeb"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentWeb" ],
        "summary" : "Create a new entity AddressIndependentWeb",
        "description" : "Create a new entity in EntitySet: AddressIndependentWeb",
        "operationId" : "createAddressIndependentWeb",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentWeb"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentWeb",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentWeb" ],
        "summary" : "Delete AddressIndependentWeb",
        "description" : "Delete entity in EntitySet AddressIndependentWeb",
        "operationId" : "deleteAddressIndependentWeb",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentWeb successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentWeb" ],
        "summary" : "Update entity AddressIndependentWeb",
        "description" : "Update an existing entity in EntitySet: AddressIndependentWeb",
        "operationId" : "updateAddressIndependentWeb",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentWeb"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentWeb",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressIndependentWebDummy*" : {
      "get" : {
        "tags" : [ "AddressIndependentWebDummy" ],
        "summary" : "Get AddressIndependentWebDummy",
        "description" : "Returns the entity: AddressIndependentWebDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentWebDummy supports the following navigational properties: [to_WebNote, to_Parent]<br />For example: .../AddressIndependentWebDummy(Entity-Id)/<b>to_WebNote</b>/.....",
        "operationId" : "getAddressIndependentWebDummy",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WebNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentWebDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressIndependentWebDummy"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressIndependentWebDummy({Id})*" : {
      "get" : {
        "tags" : [ "AddressIndependentWebDummy" ],
        "summary" : "Get AddressIndependentWebDummy on Id",
        "description" : "Returns the entity: AddressIndependentWebDummy. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressIndependentWebDummy supports the following navigational properties: [to_WebNote, to_Parent]<br />For example: .../AddressIndependentWebDummy(Entity-Id)/<b>to_WebNote</b>/.....",
        "operationId" : "getAddressIndependentWebDummyId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WebNote"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentWebDummy",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressIndependentWebDummy"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressIndependentWebDummy" ],
        "summary" : "Create a new entity AddressIndependentWebDummy",
        "description" : "Create a new entity in EntitySet: AddressIndependentWebDummy",
        "operationId" : "createAddressIndependentWebDummy",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentWebDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressIndependentWebDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressIndependentWebDummy" ],
        "summary" : "Delete AddressIndependentWebDummy",
        "description" : "Delete entity in EntitySet AddressIndependentWebDummy",
        "operationId" : "deleteAddressIndependentWebDummy",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressIndependentWebDummy successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressIndependentWebDummy" ],
        "summary" : "Update entity AddressIndependentWebDummy",
        "description" : "Update an existing entity in EntitySet: AddressIndependentWebDummy",
        "operationId" : "updateAddressIndependentWebDummy",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressIndependentWebDummy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressIndependentWebDummy",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressInformation*" : {
      "get" : {
        "tags" : [ "AddressInformation" ],
        "summary" : "Get AddressInformation",
        "description" : "Returns the entity: AddressInformation. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressInformation supports the following navigational properties: [to_AddressUsage, to_Address, to_Parent]<br />For example: .../AddressInformation(Entity-Id)/<b>to_AddressUsage</b>/.....",
        "operationId" : "getAddressInformation",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_AddressUsage"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressInformation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressInformation"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressInformation({Id})*" : {
      "get" : {
        "tags" : [ "AddressInformation" ],
        "summary" : "Get AddressInformation on Id",
        "description" : "Returns the entity: AddressInformation. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressInformation supports the following navigational properties: [to_AddressUsage, to_Address, to_Parent]<br />For example: .../AddressInformation(Entity-Id)/<b>to_AddressUsage</b>/.....",
        "operationId" : "getAddressInformationId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_AddressUsage"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressInformation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressInformation"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressInformation" ],
        "summary" : "Create a new entity AddressInformation",
        "description" : "Create a new entity in EntitySet: AddressInformation",
        "operationId" : "createAddressInformation",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressInformation",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressInformation" ],
        "summary" : "Delete AddressInformation",
        "description" : "Delete entity in EntitySet AddressInformation",
        "operationId" : "deleteAddressInformation",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressInformation successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressInformation" ],
        "summary" : "Update entity AddressInformation",
        "description" : "Update an existing entity in EntitySet: AddressInformation",
        "operationId" : "updateAddressInformation",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressInformation",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressOrganizationName*" : {
      "get" : {
        "tags" : [ "AddressOrganizationName" ],
        "summary" : "Get AddressOrganizationName",
        "description" : "Returns the entity: AddressOrganizationName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressOrganizationName supports the following navigational properties: [to_Parent]<br />For example: .../AddressOrganizationName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getAddressOrganizationName",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressOrganizationName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressOrganizationName"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressOrganizationName({Id})*" : {
      "get" : {
        "tags" : [ "AddressOrganizationName" ],
        "summary" : "Get AddressOrganizationName on Id",
        "description" : "Returns the entity: AddressOrganizationName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressOrganizationName supports the following navigational properties: [to_Parent]<br />For example: .../AddressOrganizationName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getAddressOrganizationNameId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressOrganizationName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressOrganizationName"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressOrganizationName" ],
        "summary" : "Create a new entity AddressOrganizationName",
        "description" : "Create a new entity in EntitySet: AddressOrganizationName",
        "operationId" : "createAddressOrganizationName",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressOrganizationName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressOrganizationName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressOrganizationName" ],
        "summary" : "Delete AddressOrganizationName",
        "description" : "Delete entity in EntitySet AddressOrganizationName",
        "operationId" : "deleteAddressOrganizationName",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressOrganizationName successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressOrganizationName" ],
        "summary" : "Update entity AddressOrganizationName",
        "description" : "Update an existing entity in EntitySet: AddressOrganizationName",
        "operationId" : "updateAddressOrganizationName",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressOrganizationName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressOrganizationName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressPersonName*" : {
      "get" : {
        "tags" : [ "AddressPersonName" ],
        "summary" : "Get AddressPersonName",
        "description" : "Returns the entity: AddressPersonName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressPersonName supports the following navigational properties: [to_Parent]<br />For example: .../AddressPersonName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getAddressPersonName",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressPersonName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressPersonName"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressPersonName({Id})*" : {
      "get" : {
        "tags" : [ "AddressPersonName" ],
        "summary" : "Get AddressPersonName on Id",
        "description" : "Returns the entity: AddressPersonName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressPersonName supports the following navigational properties: [to_Parent]<br />For example: .../AddressPersonName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getAddressPersonNameId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressPersonName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressPersonName"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressPersonName" ],
        "summary" : "Create a new entity AddressPersonName",
        "description" : "Create a new entity in EntitySet: AddressPersonName",
        "operationId" : "createAddressPersonName",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressPersonName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressPersonName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressPersonName" ],
        "summary" : "Delete AddressPersonName",
        "description" : "Delete entity in EntitySet AddressPersonName",
        "operationId" : "deleteAddressPersonName",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressPersonName successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressPersonName" ],
        "summary" : "Update entity AddressPersonName",
        "description" : "Update an existing entity in EntitySet: AddressPersonName",
        "operationId" : "updateAddressPersonName",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressPersonName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressPersonName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/AddressUsage*" : {
      "get" : {
        "tags" : [ "AddressUsage" ],
        "summary" : "Get AddressUsage",
        "description" : "Returns the entity: AddressUsage. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressUsage supports the following navigational properties: [to_Address, to_Parent, to_Root]<br />For example: .../AddressUsage(Entity-Id)/<b>to_Address</b>/.....",
        "operationId" : "getAddressUsage",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Address"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressUsage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressUsage"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/AddressUsage({Id})*" : {
      "get" : {
        "tags" : [ "AddressUsage" ],
        "summary" : "Get AddressUsage on Id",
        "description" : "Returns the entity: AddressUsage. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: AddressUsage supports the following navigational properties: [to_Address, to_Parent, to_Root]<br />For example: .../AddressUsage(Entity-Id)/<b>to_Address</b>/.....",
        "operationId" : "getAddressUsageId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Address"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressUsage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressUsage"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AddressUsage" ],
        "summary" : "Create a new entity AddressUsage",
        "description" : "Create a new entity in EntitySet: AddressUsage",
        "operationId" : "createAddressUsage",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressUsage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet AddressUsage",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AddressUsage" ],
        "summary" : "Delete AddressUsage",
        "description" : "Delete entity in EntitySet AddressUsage",
        "operationId" : "deleteAddressUsage",
        "responses" : {
          "204" : {
            "description" : "EntitySet AddressUsage successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AddressUsage" ],
        "summary" : "Update entity AddressUsage",
        "description" : "Update an existing entity in EntitySet: AddressUsage",
        "operationId" : "updateAddressUsage",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressUsage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet AddressUsage",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/BusinessPartner*" : {
      "get" : {
        "tags" : [ "BusinessPartner" ],
        "summary" : "Get BusinessPartner",
        "description" : "Returns the entity: BusinessPartner. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartner supports the following navigational properties: [to_Customer, to_AddressInformation, to_Person, to_Organization, to_Group, to_Identification, to_IndustrySector, to_Role, to_AddressUsage, to_TaxNumber, to_DefaultIndustrySector, to_DefaultPerson, to_DefaultOrganization, to_DefaultGroup, to_CurrentAddressInformation, to_CurrentDefaultAddressUsageCode, to_CurrentDefaultAddressUsage, to_BusinessPartnerRelationship, to_HasContactPerson, to_CurrentHasContactPerson, to_CurrentDefaultHasContactPerson, to_Supplier, to_Bank, to_PaymentCard, to_AddressIndependentCommunication]<br />For example: .../BusinessPartner(Entity-Id)/<b>to_Customer</b>/.....",
        "operationId" : "getBusinessPartner",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Customer"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BusinessPartner"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/BusinessPartner({Id})*" : {
      "get" : {
        "tags" : [ "BusinessPartner" ],
        "summary" : "Get BusinessPartner on Id",
        "description" : "Returns the entity: BusinessPartner. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartner supports the following navigational properties: [to_Customer, to_AddressInformation, to_Person, to_Organization, to_Group, to_Identification, to_IndustrySector, to_Role, to_AddressUsage, to_TaxNumber, to_DefaultIndustrySector, to_DefaultPerson, to_DefaultOrganization, to_DefaultGroup, to_CurrentAddressInformation, to_CurrentDefaultAddressUsageCode, to_CurrentDefaultAddressUsage, to_BusinessPartnerRelationship, to_HasContactPerson, to_CurrentHasContactPerson, to_CurrentDefaultHasContactPerson, to_Supplier, to_Bank, to_PaymentCard, to_AddressIndependentCommunication]<br />For example: .../BusinessPartner(Entity-Id)/<b>to_Customer</b>/.....",
        "operationId" : "getBusinessPartnerId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Customer"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartner",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessPartner"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BusinessPartner" ],
        "summary" : "Create a new entity BusinessPartner",
        "description" : "Create a new entity in EntitySet: BusinessPartner",
        "operationId" : "createBusinessPartner",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartner"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet BusinessPartner",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BusinessPartner" ],
        "summary" : "Delete BusinessPartner",
        "description" : "Delete entity in EntitySet BusinessPartner",
        "operationId" : "deleteBusinessPartner",
        "responses" : {
          "204" : {
            "description" : "EntitySet BusinessPartner successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BusinessPartner" ],
        "summary" : "Update entity BusinessPartner",
        "description" : "Update an existing entity in EntitySet: BusinessPartner",
        "operationId" : "updateBusinessPartner",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartner"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartner",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/BusinessPartnerBank*" : {
      "get" : {
        "tags" : [ "BusinessPartnerBank" ],
        "summary" : "Get BusinessPartnerBank",
        "description" : "Returns the entity: BusinessPartnerBank. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartnerBank supports the following navigational properties: [to_CountryCode, to_Parent]<br />For example: .../BusinessPartnerBank(Entity-Id)/<b>to_CountryCode</b>/.....",
        "operationId" : "getBusinessPartnerBank",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_CountryCode"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerBank",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BusinessPartnerBank"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/BusinessPartnerBank({Id})*" : {
      "get" : {
        "tags" : [ "BusinessPartnerBank" ],
        "summary" : "Get BusinessPartnerBank on Id",
        "description" : "Returns the entity: BusinessPartnerBank. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartnerBank supports the following navigational properties: [to_CountryCode, to_Parent]<br />For example: .../BusinessPartnerBank(Entity-Id)/<b>to_CountryCode</b>/.....",
        "operationId" : "getBusinessPartnerBankId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_CountryCode"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerBank",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessPartnerBank"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BusinessPartnerBank" ],
        "summary" : "Create a new entity BusinessPartnerBank",
        "description" : "Create a new entity in EntitySet: BusinessPartnerBank",
        "operationId" : "createBusinessPartnerBank",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartnerBank"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet BusinessPartnerBank",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BusinessPartnerBank" ],
        "summary" : "Delete BusinessPartnerBank",
        "description" : "Delete entity in EntitySet BusinessPartnerBank",
        "operationId" : "deleteBusinessPartnerBank",
        "responses" : {
          "204" : {
            "description" : "EntitySet BusinessPartnerBank successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BusinessPartnerBank" ],
        "summary" : "Update entity BusinessPartnerBank",
        "description" : "Update an existing entity in EntitySet: BusinessPartnerBank",
        "operationId" : "updateBusinessPartnerBank",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartnerBank"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerBank",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/BusinessPartnerRelationship*" : {
      "get" : {
        "tags" : [ "BusinessPartnerRelationship" ],
        "summary" : "Get BusinessPartnerRelationship",
        "description" : "Returns the entity: BusinessPartnerRelationship. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartnerRelationship supports the following navigational properties: [to_ContactPerson, to_FirstBusinessPartner, to_SecondBusinessPartner]<br />For example: .../BusinessPartnerRelationship(Entity-Id)/<b>to_ContactPerson</b>/.....",
        "operationId" : "getBusinessPartnerRelationship",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_ContactPerson"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerRelationship",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BusinessPartnerRelationship"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/BusinessPartnerRelationship({Id})*" : {
      "get" : {
        "tags" : [ "BusinessPartnerRelationship" ],
        "summary" : "Get BusinessPartnerRelationship on Id",
        "description" : "Returns the entity: BusinessPartnerRelationship. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartnerRelationship supports the following navigational properties: [to_ContactPerson, to_FirstBusinessPartner, to_SecondBusinessPartner]<br />For example: .../BusinessPartnerRelationship(Entity-Id)/<b>to_ContactPerson</b>/.....",
        "operationId" : "getBusinessPartnerRelationshipId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_ContactPerson"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerRelationship",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessPartnerRelationship"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BusinessPartnerRelationship" ],
        "summary" : "Create a new entity BusinessPartnerRelationship",
        "description" : "Create a new entity in EntitySet: BusinessPartnerRelationship",
        "operationId" : "createBusinessPartnerRelationship",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartnerRelationship"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet BusinessPartnerRelationship",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BusinessPartnerRelationship" ],
        "summary" : "Delete BusinessPartnerRelationship",
        "description" : "Delete entity in EntitySet BusinessPartnerRelationship",
        "operationId" : "deleteBusinessPartnerRelationship",
        "responses" : {
          "204" : {
            "description" : "EntitySet BusinessPartnerRelationship successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BusinessPartnerRelationship" ],
        "summary" : "Update entity BusinessPartnerRelationship",
        "description" : "Update an existing entity in EntitySet: BusinessPartnerRelationship",
        "operationId" : "updateBusinessPartnerRelationship",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartnerRelationship"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerRelationship",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/BusinessPartnerWhldgTax*" : {
      "get" : {
        "tags" : [ "BusinessPartnerWhldgTax" ],
        "summary" : "Get BusinessPartnerWhldgTax",
        "description" : "Returns the entity: BusinessPartnerWhldgTax. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartnerWhldgTax supports the following navigational properties: [to_Parent]<br />For example: .../BusinessPartnerWhldgTax(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getBusinessPartnerWhldgTax",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerWhldgTax",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BusinessPartnerWhldgTax"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/BusinessPartnerWhldgTax({Id})*" : {
      "get" : {
        "tags" : [ "BusinessPartnerWhldgTax" ],
        "summary" : "Get BusinessPartnerWhldgTax on Id",
        "description" : "Returns the entity: BusinessPartnerWhldgTax. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: BusinessPartnerWhldgTax supports the following navigational properties: [to_Parent]<br />For example: .../BusinessPartnerWhldgTax(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getBusinessPartnerWhldgTaxId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerWhldgTax",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessPartnerWhldgTax"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BusinessPartnerWhldgTax" ],
        "summary" : "Create a new entity BusinessPartnerWhldgTax",
        "description" : "Create a new entity in EntitySet: BusinessPartnerWhldgTax",
        "operationId" : "createBusinessPartnerWhldgTax",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartnerWhldgTax"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet BusinessPartnerWhldgTax",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BusinessPartnerWhldgTax" ],
        "summary" : "Delete BusinessPartnerWhldgTax",
        "description" : "Delete entity in EntitySet BusinessPartnerWhldgTax",
        "operationId" : "deleteBusinessPartnerWhldgTax",
        "responses" : {
          "204" : {
            "description" : "EntitySet BusinessPartnerWhldgTax successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BusinessPartnerWhldgTax" ],
        "summary" : "Update entity BusinessPartnerWhldgTax",
        "description" : "Update an existing entity in EntitySet: BusinessPartnerWhldgTax",
        "operationId" : "updateBusinessPartnerWhldgTax",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessPartnerWhldgTax"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet BusinessPartnerWhldgTax",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/C_Countries*" : {
      "get" : {
        "tags" : [ "C_Countries" ],
        "summary" : "Get C_Countries",
        "description" : "Returns the entity: C_Countries. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: C_Countries supports the following navigational properties: [text, subdivision, localised]<br />For example: .../C_Countries(Entity-Id)/<b>text</b>/.....",
        "operationId" : "getC_Countries",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "text"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet C_Countries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/C_Countries"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/C_Countries({Id})*" : {
      "get" : {
        "tags" : [ "C_Countries" ],
        "summary" : "Get C_Countries on Id",
        "description" : "Returns the entity: C_Countries. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: C_Countries supports the following navigational properties: [text, subdivision, localised]<br />For example: .../C_Countries(Entity-Id)/<b>text</b>/.....",
        "operationId" : "getC_CountriesId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "text"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet C_Countries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/C_Countries"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "C_Countries" ],
        "summary" : "Create a new entity C_Countries",
        "description" : "Create a new entity in EntitySet: C_Countries",
        "operationId" : "createC_Countries",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/C_Countries"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet C_Countries",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "C_Countries" ],
        "summary" : "Delete C_Countries",
        "description" : "Delete entity in EntitySet C_Countries",
        "operationId" : "deleteC_Countries",
        "responses" : {
          "204" : {
            "description" : "EntitySet C_Countries successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "C_Countries" ],
        "summary" : "Update entity C_Countries",
        "description" : "Update an existing entity in EntitySet: C_Countries",
        "operationId" : "updateC_Countries",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/C_Countries"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet C_Countries",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: BusConfignVersion, CountryTwoLetterISOCode",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/CommunicationDataText*" : {
      "get" : {
        "tags" : [ "CommunicationDataText" ],
        "summary" : "Get CommunicationDataText",
        "description" : "Returns the entity: CommunicationDataText. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br />The entity: CommunicationDataText supports <b>no</b> navigational properties.",
        "operationId" : "getCommunicationDataText",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet CommunicationDataText",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CommunicationDataText"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/CommunicationDataText({Id})*" : {
      "get" : {
        "tags" : [ "CommunicationDataText" ],
        "summary" : "Get CommunicationDataText on Id",
        "description" : "Returns the entity: CommunicationDataText. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br />The entity: CommunicationDataText supports <b>no</b> navigational properties.",
        "operationId" : "getCommunicationDataTextId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet CommunicationDataText",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommunicationDataText"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "CommunicationDataText" ],
        "summary" : "Create a new entity CommunicationDataText",
        "description" : "Create a new entity in EntitySet: CommunicationDataText",
        "operationId" : "createCommunicationDataText",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommunicationDataText"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet CommunicationDataText",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CommunicationDataText" ],
        "summary" : "Delete CommunicationDataText",
        "description" : "Delete entity in EntitySet CommunicationDataText",
        "operationId" : "deleteCommunicationDataText",
        "responses" : {
          "204" : {
            "description" : "EntitySet CommunicationDataText successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "CommunicationDataText" ],
        "summary" : "Update entity CommunicationDataText",
        "description" : "Update an existing entity in EntitySet: CommunicationDataText",
        "operationId" : "updateCommunicationDataText",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommunicationDataText"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet CommunicationDataText",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/ContactPerson*" : {
      "get" : {
        "tags" : [ "ContactPerson" ],
        "summary" : "Get ContactPerson",
        "description" : "Returns the entity: ContactPerson. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: ContactPerson supports the following navigational properties: [to_Parent, to_WorkPlaceAddressInformation, to_CurrentDefaultWorkPlaceAddressInformation, to_Cwai]<br />For example: .../ContactPerson(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getContactPerson",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet ContactPerson",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactPerson"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/ContactPerson({Id})*" : {
      "get" : {
        "tags" : [ "ContactPerson" ],
        "summary" : "Get ContactPerson on Id",
        "description" : "Returns the entity: ContactPerson. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: ContactPerson supports the following navigational properties: [to_Parent, to_WorkPlaceAddressInformation, to_CurrentDefaultWorkPlaceAddressInformation, to_Cwai]<br />For example: .../ContactPerson(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getContactPersonId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet ContactPerson",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactPerson"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ContactPerson" ],
        "summary" : "Create a new entity ContactPerson",
        "description" : "Create a new entity in EntitySet: ContactPerson",
        "operationId" : "createContactPerson",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPerson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet ContactPerson",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ContactPerson" ],
        "summary" : "Delete ContactPerson",
        "description" : "Delete entity in EntitySet ContactPerson",
        "operationId" : "deleteContactPerson",
        "responses" : {
          "204" : {
            "description" : "EntitySet ContactPerson successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ContactPerson" ],
        "summary" : "Update entity ContactPerson",
        "description" : "Update an existing entity in EntitySet: ContactPerson",
        "operationId" : "updateContactPerson",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPerson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet ContactPerson",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/CountryTexts*" : {
      "get" : {
        "tags" : [ "CountryTexts" ],
        "summary" : "Get CountryTexts",
        "description" : "Returns the entity: CountryTexts. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br />The entity: CountryTexts supports <b>no</b> navigational properties.",
        "operationId" : "getCountryTexts",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet CountryTexts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CountryTexts"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/CountryTexts({Id})*" : {
      "get" : {
        "tags" : [ "CountryTexts" ],
        "summary" : "Get CountryTexts on Id",
        "description" : "Returns the entity: CountryTexts. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br />The entity: CountryTexts supports <b>no</b> navigational properties.",
        "operationId" : "getCountryTextsId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet CountryTexts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryTexts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "CountryTexts" ],
        "summary" : "Create a new entity CountryTexts",
        "description" : "Create a new entity in EntitySet: CountryTexts",
        "operationId" : "createCountryTexts",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryTexts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet CountryTexts",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CountryTexts" ],
        "summary" : "Delete CountryTexts",
        "description" : "Delete entity in EntitySet CountryTexts",
        "operationId" : "deleteCountryTexts",
        "responses" : {
          "204" : {
            "description" : "EntitySet CountryTexts successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "CountryTexts" ],
        "summary" : "Update entity CountryTexts",
        "description" : "Update an existing entity in EntitySet: CountryTexts",
        "operationId" : "updateCountryTexts",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CountryTexts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet CountryTexts",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: BusConfignVersion, CountryTwoLetterISOCode, LanguageTwoLetterISOCode",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/Customer*" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get Customer",
        "description" : "Returns the entity: Customer. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Customer supports the following navigational properties: [to_AddressInformation, to_SalesArea, to_SalesTax, to_Parent]<br />For example: .../Customer(Entity-Id)/<b>to_AddressInformation</b>/.....",
        "operationId" : "getCustomer",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_AddressInformation"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Customer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Customer"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Customer({Id})*" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get Customer on Id",
        "description" : "Returns the entity: Customer. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Customer supports the following navigational properties: [to_AddressInformation, to_SalesArea, to_SalesTax, to_Parent]<br />For example: .../Customer(Entity-Id)/<b>to_AddressInformation</b>/.....",
        "operationId" : "getCustomerId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_AddressInformation"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Customer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create a new entity Customer",
        "description" : "Create a new entity in EntitySet: Customer",
        "operationId" : "createCustomer",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Customer",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete Customer",
        "description" : "Delete entity in EntitySet Customer",
        "operationId" : "deleteCustomer",
        "responses" : {
          "204" : {
            "description" : "EntitySet Customer successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Customer" ],
        "summary" : "Update entity Customer",
        "description" : "Update an existing entity in EntitySet: Customer",
        "operationId" : "updateCustomer",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Customer",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/CustomerPartnerFunction*" : {
      "get" : {
        "tags" : [ "CustomerPartnerFunction" ],
        "summary" : "Get CustomerPartnerFunction",
        "description" : "Returns the entity: CustomerPartnerFunction. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: CustomerPartnerFunction supports the following navigational properties: [to_Parent]<br />For example: .../CustomerPartnerFunction(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getCustomerPartnerFunction",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet CustomerPartnerFunction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerPartnerFunction"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/CustomerPartnerFunction({Id})*" : {
      "get" : {
        "tags" : [ "CustomerPartnerFunction" ],
        "summary" : "Get CustomerPartnerFunction on Id",
        "description" : "Returns the entity: CustomerPartnerFunction. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: CustomerPartnerFunction supports the following navigational properties: [to_Parent]<br />For example: .../CustomerPartnerFunction(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getCustomerPartnerFunctionId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet CustomerPartnerFunction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPartnerFunction"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "CustomerPartnerFunction" ],
        "summary" : "Create a new entity CustomerPartnerFunction",
        "description" : "Create a new entity in EntitySet: CustomerPartnerFunction",
        "operationId" : "createCustomerPartnerFunction",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPartnerFunction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet CustomerPartnerFunction",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CustomerPartnerFunction" ],
        "summary" : "Delete CustomerPartnerFunction",
        "description" : "Delete entity in EntitySet CustomerPartnerFunction",
        "operationId" : "deleteCustomerPartnerFunction",
        "responses" : {
          "204" : {
            "description" : "EntitySet CustomerPartnerFunction successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "CustomerPartnerFunction" ],
        "summary" : "Update entity CustomerPartnerFunction",
        "description" : "Update an existing entity in EntitySet: CustomerPartnerFunction",
        "operationId" : "updateCustomerPartnerFunction",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerPartnerFunction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet CustomerPartnerFunction",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/EmailAddress*" : {
      "get" : {
        "tags" : [ "EmailAddress" ],
        "summary" : "Get EmailAddress",
        "description" : "Returns the entity: EmailAddress. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: EmailAddress supports the following navigational properties: [to_Parent, to_EmailNote]<br />For example: .../EmailAddress(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getEmailAddress",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet EmailAddress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EmailAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/EmailAddress({Id})*" : {
      "get" : {
        "tags" : [ "EmailAddress" ],
        "summary" : "Get EmailAddress on Id",
        "description" : "Returns the entity: EmailAddress. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: EmailAddress supports the following navigational properties: [to_Parent, to_EmailNote]<br />For example: .../EmailAddress(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getEmailAddressId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet EmailAddress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailAddress"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "EmailAddress" ],
        "summary" : "Create a new entity EmailAddress",
        "description" : "Create a new entity in EntitySet: EmailAddress",
        "operationId" : "createEmailAddress",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet EmailAddress",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EmailAddress" ],
        "summary" : "Delete EmailAddress",
        "description" : "Delete entity in EntitySet EmailAddress",
        "operationId" : "deleteEmailAddress",
        "responses" : {
          "204" : {
            "description" : "EntitySet EmailAddress successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "EmailAddress" ],
        "summary" : "Update entity EmailAddress",
        "description" : "Update an existing entity in EntitySet: EmailAddress",
        "operationId" : "updateEmailAddress",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet EmailAddress",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/FaxNumber*" : {
      "get" : {
        "tags" : [ "FaxNumber" ],
        "summary" : "Get FaxNumber",
        "description" : "Returns the entity: FaxNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: FaxNumber supports the following navigational properties: [to_Parent, to_FaxNote]<br />For example: .../FaxNumber(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getFaxNumber",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet FaxNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FaxNumber"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/FaxNumber({Id})*" : {
      "get" : {
        "tags" : [ "FaxNumber" ],
        "summary" : "Get FaxNumber on Id",
        "description" : "Returns the entity: FaxNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: FaxNumber supports the following navigational properties: [to_Parent, to_FaxNote]<br />For example: .../FaxNumber(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getFaxNumberId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet FaxNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FaxNumber"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "FaxNumber" ],
        "summary" : "Create a new entity FaxNumber",
        "description" : "Create a new entity in EntitySet: FaxNumber",
        "operationId" : "createFaxNumber",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FaxNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet FaxNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FaxNumber" ],
        "summary" : "Delete FaxNumber",
        "description" : "Delete entity in EntitySet FaxNumber",
        "operationId" : "deleteFaxNumber",
        "responses" : {
          "204" : {
            "description" : "EntitySet FaxNumber successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "FaxNumber" ],
        "summary" : "Update entity FaxNumber",
        "description" : "Update an existing entity in EntitySet: FaxNumber",
        "operationId" : "updateFaxNumber",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FaxNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet FaxNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/GroupName*" : {
      "get" : {
        "tags" : [ "GroupName" ],
        "summary" : "Get GroupName",
        "description" : "Returns the entity: GroupName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: GroupName supports the following navigational properties: [to_Parent]<br />For example: .../GroupName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getGroupName",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet GroupName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupName"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/GroupName({Id})*" : {
      "get" : {
        "tags" : [ "GroupName" ],
        "summary" : "Get GroupName on Id",
        "description" : "Returns the entity: GroupName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: GroupName supports the following navigational properties: [to_Parent]<br />For example: .../GroupName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getGroupNameId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet GroupName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupName"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GroupName" ],
        "summary" : "Create a new entity GroupName",
        "description" : "Create a new entity in EntitySet: GroupName",
        "operationId" : "createGroupName",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet GroupName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "GroupName" ],
        "summary" : "Delete GroupName",
        "description" : "Delete entity in EntitySet GroupName",
        "operationId" : "deleteGroupName",
        "responses" : {
          "204" : {
            "description" : "EntitySet GroupName successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "GroupName" ],
        "summary" : "Update entity GroupName",
        "description" : "Update an existing entity in EntitySet: GroupName",
        "operationId" : "updateGroupName",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet GroupName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/Identification*" : {
      "get" : {
        "tags" : [ "Identification" ],
        "summary" : "Get Identification",
        "description" : "Returns the entity: Identification. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Identification supports the following navigational properties: [to_Parent]<br />For example: .../Identification(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getIdentification",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Identification",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Identification"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Identification({Id})*" : {
      "get" : {
        "tags" : [ "Identification" ],
        "summary" : "Get Identification on Id",
        "description" : "Returns the entity: Identification. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Identification supports the following navigational properties: [to_Parent]<br />For example: .../Identification(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getIdentificationId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Identification",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Identification"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Identification" ],
        "summary" : "Create a new entity Identification",
        "description" : "Create a new entity in EntitySet: Identification",
        "operationId" : "createIdentification",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Identification"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Identification",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Identification" ],
        "summary" : "Delete Identification",
        "description" : "Delete entity in EntitySet Identification",
        "operationId" : "deleteIdentification",
        "responses" : {
          "204" : {
            "description" : "EntitySet Identification successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Identification" ],
        "summary" : "Update entity Identification",
        "description" : "Update an existing entity in EntitySet: Identification",
        "operationId" : "updateIdentification",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Identification"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Identification",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/IndustrySector*" : {
      "get" : {
        "tags" : [ "IndustrySector" ],
        "summary" : "Get IndustrySector",
        "description" : "Returns the entity: IndustrySector. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: IndustrySector supports the following navigational properties: [to_Parent]<br />For example: .../IndustrySector(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getIndustrySector",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet IndustrySector",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IndustrySector"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/IndustrySector({Id})*" : {
      "get" : {
        "tags" : [ "IndustrySector" ],
        "summary" : "Get IndustrySector on Id",
        "description" : "Returns the entity: IndustrySector. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: IndustrySector supports the following navigational properties: [to_Parent]<br />For example: .../IndustrySector(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getIndustrySectorId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet IndustrySector",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IndustrySector"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "IndustrySector" ],
        "summary" : "Create a new entity IndustrySector",
        "description" : "Create a new entity in EntitySet: IndustrySector",
        "operationId" : "createIndustrySector",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IndustrySector"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet IndustrySector",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IndustrySector" ],
        "summary" : "Delete IndustrySector",
        "description" : "Delete entity in EntitySet IndustrySector",
        "operationId" : "deleteIndustrySector",
        "responses" : {
          "204" : {
            "description" : "EntitySet IndustrySector successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "IndustrySector" ],
        "summary" : "Update entity IndustrySector",
        "description" : "Update an existing entity in EntitySet: IndustrySector",
        "operationId" : "updateIndustrySector",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IndustrySector"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet IndustrySector",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/OrganizationName*" : {
      "get" : {
        "tags" : [ "OrganizationName" ],
        "summary" : "Get OrganizationName",
        "description" : "Returns the entity: OrganizationName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: OrganizationName supports the following navigational properties: [to_Parent]<br />For example: .../OrganizationName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getOrganizationName",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet OrganizationName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganizationName"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/OrganizationName({Id})*" : {
      "get" : {
        "tags" : [ "OrganizationName" ],
        "summary" : "Get OrganizationName on Id",
        "description" : "Returns the entity: OrganizationName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: OrganizationName supports the following navigational properties: [to_Parent]<br />For example: .../OrganizationName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getOrganizationNameId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet OrganizationName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationName"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "OrganizationName" ],
        "summary" : "Create a new entity OrganizationName",
        "description" : "Create a new entity in EntitySet: OrganizationName",
        "operationId" : "createOrganizationName",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet OrganizationName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "OrganizationName" ],
        "summary" : "Delete OrganizationName",
        "description" : "Delete entity in EntitySet OrganizationName",
        "operationId" : "deleteOrganizationName",
        "responses" : {
          "204" : {
            "description" : "EntitySet OrganizationName successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "OrganizationName" ],
        "summary" : "Update entity OrganizationName",
        "description" : "Update an existing entity in EntitySet: OrganizationName",
        "operationId" : "updateOrganizationName",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet OrganizationName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/PaymentCard*" : {
      "get" : {
        "tags" : [ "PaymentCard" ],
        "summary" : "Get PaymentCard",
        "description" : "Returns the entity: PaymentCard. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PaymentCard supports the following navigational properties: [to_Parent]<br />For example: .../PaymentCard(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPaymentCard",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PaymentCard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentCard"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/PaymentCard({Id})*" : {
      "get" : {
        "tags" : [ "PaymentCard" ],
        "summary" : "Get PaymentCard on Id",
        "description" : "Returns the entity: PaymentCard. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PaymentCard supports the following navigational properties: [to_Parent]<br />For example: .../PaymentCard(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPaymentCardId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PaymentCard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentCard"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PaymentCard" ],
        "summary" : "Create a new entity PaymentCard",
        "description" : "Create a new entity in EntitySet: PaymentCard",
        "operationId" : "createPaymentCard",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentCard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet PaymentCard",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PaymentCard" ],
        "summary" : "Delete PaymentCard",
        "description" : "Delete entity in EntitySet PaymentCard",
        "operationId" : "deletePaymentCard",
        "responses" : {
          "204" : {
            "description" : "EntitySet PaymentCard successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PaymentCard" ],
        "summary" : "Update entity PaymentCard",
        "description" : "Update an existing entity in EntitySet: PaymentCard",
        "operationId" : "updatePaymentCard",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentCard"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet PaymentCard",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/PersonName*" : {
      "get" : {
        "tags" : [ "PersonName" ],
        "summary" : "Get PersonName",
        "description" : "Returns the entity: PersonName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PersonName supports the following navigational properties: [to_Parent]<br />For example: .../PersonName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPersonName",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PersonName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonName"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/PersonName({Id})*" : {
      "get" : {
        "tags" : [ "PersonName" ],
        "summary" : "Get PersonName on Id",
        "description" : "Returns the entity: PersonName. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PersonName supports the following navigational properties: [to_Parent]<br />For example: .../PersonName(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPersonNameId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PersonName",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonName"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PersonName" ],
        "summary" : "Create a new entity PersonName",
        "description" : "Create a new entity in EntitySet: PersonName",
        "operationId" : "createPersonName",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet PersonName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PersonName" ],
        "summary" : "Delete PersonName",
        "description" : "Delete entity in EntitySet PersonName",
        "operationId" : "deletePersonName",
        "responses" : {
          "204" : {
            "description" : "EntitySet PersonName successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PersonName" ],
        "summary" : "Update entity PersonName",
        "description" : "Update an existing entity in EntitySet: PersonName",
        "operationId" : "updatePersonName",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonName"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet PersonName",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/PhoneNumber*" : {
      "get" : {
        "tags" : [ "PhoneNumber" ],
        "summary" : "Get PhoneNumber",
        "description" : "Returns the entity: PhoneNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PhoneNumber supports the following navigational properties: [to_Parent, to_PhoneNote]<br />For example: .../PhoneNumber(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPhoneNumber",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PhoneNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PhoneNumber"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/PhoneNumber({Id})*" : {
      "get" : {
        "tags" : [ "PhoneNumber" ],
        "summary" : "Get PhoneNumber on Id",
        "description" : "Returns the entity: PhoneNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PhoneNumber supports the following navigational properties: [to_Parent, to_PhoneNote]<br />For example: .../PhoneNumber(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPhoneNumberId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PhoneNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhoneNumber"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PhoneNumber" ],
        "summary" : "Create a new entity PhoneNumber",
        "description" : "Create a new entity in EntitySet: PhoneNumber",
        "operationId" : "createPhoneNumber",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet PhoneNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PhoneNumber" ],
        "summary" : "Delete PhoneNumber",
        "description" : "Delete entity in EntitySet PhoneNumber",
        "operationId" : "deletePhoneNumber",
        "responses" : {
          "204" : {
            "description" : "EntitySet PhoneNumber successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PhoneNumber" ],
        "summary" : "Update entity PhoneNumber",
        "description" : "Update an existing entity in EntitySet: PhoneNumber",
        "operationId" : "updatePhoneNumber",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet PhoneNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/PostalAddress*" : {
      "get" : {
        "tags" : [ "PostalAddress" ],
        "summary" : "Get PostalAddress",
        "description" : "Returns the entity: PostalAddress. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PostalAddress supports the following navigational properties: [to_Parent]<br />For example: .../PostalAddress(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPostalAddress",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PostalAddress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostalAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/PostalAddress({Id})*" : {
      "get" : {
        "tags" : [ "PostalAddress" ],
        "summary" : "Get PostalAddress on Id",
        "description" : "Returns the entity: PostalAddress. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: PostalAddress supports the following navigational properties: [to_Parent]<br />For example: .../PostalAddress(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getPostalAddressId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet PostalAddress",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostalAddress"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PostalAddress" ],
        "summary" : "Create a new entity PostalAddress",
        "description" : "Create a new entity in EntitySet: PostalAddress",
        "operationId" : "createPostalAddress",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostalAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet PostalAddress",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PostalAddress" ],
        "summary" : "Delete PostalAddress",
        "description" : "Delete entity in EntitySet PostalAddress",
        "operationId" : "deletePostalAddress",
        "responses" : {
          "204" : {
            "description" : "EntitySet PostalAddress successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PostalAddress" ],
        "summary" : "Update entity PostalAddress",
        "description" : "Update an existing entity in EntitySet: PostalAddress",
        "operationId" : "updatePostalAddress",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostalAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet PostalAddress",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/Role*" : {
      "get" : {
        "tags" : [ "Role" ],
        "summary" : "Get Role",
        "description" : "Returns the entity: Role. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Role supports the following navigational properties: [to_Parent]<br />For example: .../Role(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getRole",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Role({Id})*" : {
      "get" : {
        "tags" : [ "Role" ],
        "summary" : "Get Role on Id",
        "description" : "Returns the entity: Role. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Role supports the following navigational properties: [to_Parent]<br />For example: .../Role(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getRoleId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Role" ],
        "summary" : "Create a new entity Role",
        "description" : "Create a new entity in EntitySet: Role",
        "operationId" : "createRole",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Role",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Role" ],
        "summary" : "Delete Role",
        "description" : "Delete entity in EntitySet Role",
        "operationId" : "deleteRole",
        "responses" : {
          "204" : {
            "description" : "EntitySet Role successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Role" ],
        "summary" : "Update entity Role",
        "description" : "Update an existing entity in EntitySet: Role",
        "operationId" : "updateRole",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Role",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/SalesArea*" : {
      "get" : {
        "tags" : [ "SalesArea" ],
        "summary" : "Get SalesArea",
        "description" : "Returns the entity: SalesArea. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SalesArea supports the following navigational properties: [to_CustomerPartnerFunction, to_Parent]<br />For example: .../SalesArea(Entity-Id)/<b>to_CustomerPartnerFunction</b>/.....",
        "operationId" : "getSalesArea",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_CustomerPartnerFunction"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SalesArea",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SalesArea"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/SalesArea({Id})*" : {
      "get" : {
        "tags" : [ "SalesArea" ],
        "summary" : "Get SalesArea on Id",
        "description" : "Returns the entity: SalesArea. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SalesArea supports the following navigational properties: [to_CustomerPartnerFunction, to_Parent]<br />For example: .../SalesArea(Entity-Id)/<b>to_CustomerPartnerFunction</b>/.....",
        "operationId" : "getSalesAreaId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_CustomerPartnerFunction"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SalesArea",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesArea"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SalesArea" ],
        "summary" : "Create a new entity SalesArea",
        "description" : "Create a new entity in EntitySet: SalesArea",
        "operationId" : "createSalesArea",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SalesArea"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet SalesArea",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SalesArea" ],
        "summary" : "Delete SalesArea",
        "description" : "Delete entity in EntitySet SalesArea",
        "operationId" : "deleteSalesArea",
        "responses" : {
          "204" : {
            "description" : "EntitySet SalesArea successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SalesArea" ],
        "summary" : "Update entity SalesArea",
        "description" : "Update an existing entity in EntitySet: SalesArea",
        "operationId" : "updateSalesArea",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SalesArea"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet SalesArea",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/SalesTax*" : {
      "get" : {
        "tags" : [ "SalesTax" ],
        "summary" : "Get SalesTax",
        "description" : "Returns the entity: SalesTax. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SalesTax supports the following navigational properties: [to_Customer]<br />For example: .../SalesTax(Entity-Id)/<b>to_Customer</b>/.....",
        "operationId" : "getSalesTax",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Customer"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SalesTax",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SalesTax"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/SalesTax({Id})*" : {
      "get" : {
        "tags" : [ "SalesTax" ],
        "summary" : "Get SalesTax on Id",
        "description" : "Returns the entity: SalesTax. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SalesTax supports the following navigational properties: [to_Customer]<br />For example: .../SalesTax(Entity-Id)/<b>to_Customer</b>/.....",
        "operationId" : "getSalesTaxId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Customer"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SalesTax",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SalesTax"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SalesTax" ],
        "summary" : "Create a new entity SalesTax",
        "description" : "Create a new entity in EntitySet: SalesTax",
        "operationId" : "createSalesTax",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SalesTax"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet SalesTax",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SalesTax" ],
        "summary" : "Delete SalesTax",
        "description" : "Delete entity in EntitySet SalesTax",
        "operationId" : "deleteSalesTax",
        "responses" : {
          "204" : {
            "description" : "EntitySet SalesTax successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SalesTax" ],
        "summary" : "Update entity SalesTax",
        "description" : "Update an existing entity in EntitySet: SalesTax",
        "operationId" : "updateSalesTax",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SalesTax"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet SalesTax",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/SubdivisionTexts*" : {
      "get" : {
        "tags" : [ "SubdivisionTexts" ],
        "summary" : "Get SubdivisionTexts",
        "description" : "Returns the entity: SubdivisionTexts. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br />The entity: SubdivisionTexts supports <b>no</b> navigational properties.",
        "operationId" : "getSubdivisionTexts",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SubdivisionTexts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SubdivisionTexts"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/SubdivisionTexts({Id})*" : {
      "get" : {
        "tags" : [ "SubdivisionTexts" ],
        "summary" : "Get SubdivisionTexts on Id",
        "description" : "Returns the entity: SubdivisionTexts. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br />The entity: SubdivisionTexts supports <b>no</b> navigational properties.",
        "operationId" : "getSubdivisionTextsId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SubdivisionTexts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubdivisionTexts"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SubdivisionTexts" ],
        "summary" : "Create a new entity SubdivisionTexts",
        "description" : "Create a new entity in EntitySet: SubdivisionTexts",
        "operationId" : "createSubdivisionTexts",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubdivisionTexts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet SubdivisionTexts",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SubdivisionTexts" ],
        "summary" : "Delete SubdivisionTexts",
        "description" : "Delete entity in EntitySet SubdivisionTexts",
        "operationId" : "deleteSubdivisionTexts",
        "responses" : {
          "204" : {
            "description" : "EntitySet SubdivisionTexts successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubdivisionTexts" ],
        "summary" : "Update entity SubdivisionTexts",
        "description" : "Update an existing entity in EntitySet: SubdivisionTexts",
        "operationId" : "updateSubdivisionTexts",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubdivisionTexts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet SubdivisionTexts",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: BusConfignVersion, CountryTwoLetterISOCode, CountrySubdivision, LanguageTwoLetterISOCode",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/Subdivisions*" : {
      "get" : {
        "tags" : [ "Subdivisions" ],
        "summary" : "Get Subdivisions",
        "description" : "Returns the entity: Subdivisions. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Subdivisions supports the following navigational properties: [subdivisionText, localisedSubdivision]<br />For example: .../Subdivisions(Entity-Id)/<b>subdivisionText</b>/.....",
        "operationId" : "getSubdivisions",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "subdivisionText"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Subdivisions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Subdivisions"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Subdivisions({Id})*" : {
      "get" : {
        "tags" : [ "Subdivisions" ],
        "summary" : "Get Subdivisions on Id",
        "description" : "Returns the entity: Subdivisions. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Subdivisions supports the following navigational properties: [subdivisionText, localisedSubdivision]<br />For example: .../Subdivisions(Entity-Id)/<b>subdivisionText</b>/.....",
        "operationId" : "getSubdivisionsId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "subdivisionText"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "BusConfignVersion"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Subdivisions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Subdivisions"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Subdivisions" ],
        "summary" : "Create a new entity Subdivisions",
        "description" : "Create a new entity in EntitySet: Subdivisions",
        "operationId" : "createSubdivisions",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subdivisions"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Subdivisions",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subdivisions" ],
        "summary" : "Delete Subdivisions",
        "description" : "Delete entity in EntitySet Subdivisions",
        "operationId" : "deleteSubdivisions",
        "responses" : {
          "204" : {
            "description" : "EntitySet Subdivisions successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Subdivisions" ],
        "summary" : "Update entity Subdivisions",
        "description" : "Update an existing entity in EntitySet: Subdivisions",
        "operationId" : "updateSubdivisions",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subdivisions"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Subdivisions",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: BusConfignVersion, CountryTwoLetterISOCode, CountrySubdivision",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/Supplier*" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get Supplier",
        "description" : "Returns the entity: Supplier. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Supplier supports the following navigational properties: [to_Parent, to_AddressInformation, to_CompanyCode, to_SupplierPurchasing]<br />For example: .../Supplier(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getSupplier",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Supplier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Supplier"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Supplier({Id})*" : {
      "get" : {
        "tags" : [ "Supplier" ],
        "summary" : "Get Supplier on Id",
        "description" : "Returns the entity: Supplier. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Supplier supports the following navigational properties: [to_Parent, to_AddressInformation, to_CompanyCode, to_SupplierPurchasing]<br />For example: .../Supplier(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getSupplierId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Supplier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Supplier"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Supplier" ],
        "summary" : "Create a new entity Supplier",
        "description" : "Create a new entity in EntitySet: Supplier",
        "operationId" : "createSupplier",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Supplier"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Supplier",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Supplier" ],
        "summary" : "Delete Supplier",
        "description" : "Delete entity in EntitySet Supplier",
        "operationId" : "deleteSupplier",
        "responses" : {
          "204" : {
            "description" : "EntitySet Supplier successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Supplier" ],
        "summary" : "Update entity Supplier",
        "description" : "Update an existing entity in EntitySet: Supplier",
        "operationId" : "updateSupplier",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Supplier"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Supplier",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/SupplierCompany*" : {
      "get" : {
        "tags" : [ "SupplierCompany" ],
        "summary" : "Get SupplierCompany",
        "description" : "Returns the entity: SupplierCompany. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SupplierCompany supports the following navigational properties: [to_WithholdingTax, to_Parent]<br />For example: .../SupplierCompany(Entity-Id)/<b>to_WithholdingTax</b>/.....",
        "operationId" : "getSupplierCompany",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WithholdingTax"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierCompany",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SupplierCompany"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/SupplierCompany({Id})*" : {
      "get" : {
        "tags" : [ "SupplierCompany" ],
        "summary" : "Get SupplierCompany on Id",
        "description" : "Returns the entity: SupplierCompany. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SupplierCompany supports the following navigational properties: [to_WithholdingTax, to_Parent]<br />For example: .../SupplierCompany(Entity-Id)/<b>to_WithholdingTax</b>/.....",
        "operationId" : "getSupplierCompanyId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_WithholdingTax"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierCompany",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierCompany"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SupplierCompany" ],
        "summary" : "Create a new entity SupplierCompany",
        "description" : "Create a new entity in EntitySet: SupplierCompany",
        "operationId" : "createSupplierCompany",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierCompany"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet SupplierCompany",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SupplierCompany" ],
        "summary" : "Delete SupplierCompany",
        "description" : "Delete entity in EntitySet SupplierCompany",
        "operationId" : "deleteSupplierCompany",
        "responses" : {
          "204" : {
            "description" : "EntitySet SupplierCompany successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SupplierCompany" ],
        "summary" : "Update entity SupplierCompany",
        "description" : "Update an existing entity in EntitySet: SupplierCompany",
        "operationId" : "updateSupplierCompany",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierCompany"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierCompany",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/SupplierPartnerFunction*" : {
      "get" : {
        "tags" : [ "SupplierPartnerFunction" ],
        "summary" : "Get SupplierPartnerFunction",
        "description" : "Returns the entity: SupplierPartnerFunction. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SupplierPartnerFunction supports the following navigational properties: [to_Parent]<br />For example: .../SupplierPartnerFunction(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getSupplierPartnerFunction",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierPartnerFunction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SupplierPartnerFunction"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/SupplierPartnerFunction({Id})*" : {
      "get" : {
        "tags" : [ "SupplierPartnerFunction" ],
        "summary" : "Get SupplierPartnerFunction on Id",
        "description" : "Returns the entity: SupplierPartnerFunction. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SupplierPartnerFunction supports the following navigational properties: [to_Parent]<br />For example: .../SupplierPartnerFunction(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getSupplierPartnerFunctionId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierPartnerFunction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierPartnerFunction"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SupplierPartnerFunction" ],
        "summary" : "Create a new entity SupplierPartnerFunction",
        "description" : "Create a new entity in EntitySet: SupplierPartnerFunction",
        "operationId" : "createSupplierPartnerFunction",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierPartnerFunction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet SupplierPartnerFunction",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SupplierPartnerFunction" ],
        "summary" : "Delete SupplierPartnerFunction",
        "description" : "Delete entity in EntitySet SupplierPartnerFunction",
        "operationId" : "deleteSupplierPartnerFunction",
        "responses" : {
          "204" : {
            "description" : "EntitySet SupplierPartnerFunction successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SupplierPartnerFunction" ],
        "summary" : "Update entity SupplierPartnerFunction",
        "description" : "Update an existing entity in EntitySet: SupplierPartnerFunction",
        "operationId" : "updateSupplierPartnerFunction",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierPartnerFunction"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierPartnerFunction",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/SupplierPurchasingOrg*" : {
      "get" : {
        "tags" : [ "SupplierPurchasingOrg" ],
        "summary" : "Get SupplierPurchasingOrg",
        "description" : "Returns the entity: SupplierPurchasingOrg. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SupplierPurchasingOrg supports the following navigational properties: [to_SupplierPartnerFunction, to_Parent]<br />For example: .../SupplierPurchasingOrg(Entity-Id)/<b>to_SupplierPartnerFunction</b>/.....",
        "operationId" : "getSupplierPurchasingOrg",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_SupplierPartnerFunction"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierPurchasingOrg",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SupplierPurchasingOrg"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/SupplierPurchasingOrg({Id})*" : {
      "get" : {
        "tags" : [ "SupplierPurchasingOrg" ],
        "summary" : "Get SupplierPurchasingOrg on Id",
        "description" : "Returns the entity: SupplierPurchasingOrg. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: SupplierPurchasingOrg supports the following navigational properties: [to_SupplierPartnerFunction, to_Parent]<br />For example: .../SupplierPurchasingOrg(Entity-Id)/<b>to_SupplierPartnerFunction</b>/.....",
        "operationId" : "getSupplierPurchasingOrgId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_SupplierPartnerFunction"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierPurchasingOrg",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierPurchasingOrg"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SupplierPurchasingOrg" ],
        "summary" : "Create a new entity SupplierPurchasingOrg",
        "description" : "Create a new entity in EntitySet: SupplierPurchasingOrg",
        "operationId" : "createSupplierPurchasingOrg",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierPurchasingOrg"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet SupplierPurchasingOrg",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SupplierPurchasingOrg" ],
        "summary" : "Delete SupplierPurchasingOrg",
        "description" : "Delete entity in EntitySet SupplierPurchasingOrg",
        "operationId" : "deleteSupplierPurchasingOrg",
        "responses" : {
          "204" : {
            "description" : "EntitySet SupplierPurchasingOrg successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SupplierPurchasingOrg" ],
        "summary" : "Update entity SupplierPurchasingOrg",
        "description" : "Update an existing entity in EntitySet: SupplierPurchasingOrg",
        "operationId" : "updateSupplierPurchasingOrg",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierPurchasingOrg"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet SupplierPurchasingOrg",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/TaxNumber*" : {
      "get" : {
        "tags" : [ "TaxNumber" ],
        "summary" : "Get TaxNumber",
        "description" : "Returns the entity: TaxNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: TaxNumber supports the following navigational properties: [to_Parent]<br />For example: .../TaxNumber(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getTaxNumber",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet TaxNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaxNumber"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/TaxNumber({Id})*" : {
      "get" : {
        "tags" : [ "TaxNumber" ],
        "summary" : "Get TaxNumber on Id",
        "description" : "Returns the entity: TaxNumber. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: TaxNumber supports the following navigational properties: [to_Parent]<br />For example: .../TaxNumber(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getTaxNumberId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet TaxNumber",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaxNumber"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TaxNumber" ],
        "summary" : "Create a new entity TaxNumber",
        "description" : "Create a new entity in EntitySet: TaxNumber",
        "operationId" : "createTaxNumber",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet TaxNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TaxNumber" ],
        "summary" : "Delete TaxNumber",
        "description" : "Delete entity in EntitySet TaxNumber",
        "operationId" : "deleteTaxNumber",
        "responses" : {
          "204" : {
            "description" : "EntitySet TaxNumber successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "TaxNumber" ],
        "summary" : "Update entity TaxNumber",
        "description" : "Update an existing entity in EntitySet: TaxNumber",
        "operationId" : "updateTaxNumber",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet TaxNumber",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/Web*" : {
      "get" : {
        "tags" : [ "Web" ],
        "summary" : "Get Web",
        "description" : "Returns the entity: Web. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Web supports the following navigational properties: [to_Parent, to_WebNote]<br />For example: .../Web(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getWeb",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Web",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Web"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Web({Id})*" : {
      "get" : {
        "tags" : [ "Web" ],
        "summary" : "Get Web on Id",
        "description" : "Returns the entity: Web. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Web supports the following navigational properties: [to_Parent, to_WebNote]<br />For example: .../Web(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getWebId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Web",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Web"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Web" ],
        "summary" : "Create a new entity Web",
        "description" : "Create a new entity in EntitySet: Web",
        "operationId" : "createWeb",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Web"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Web",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Web" ],
        "summary" : "Delete Web",
        "description" : "Delete entity in EntitySet Web",
        "operationId" : "deleteWeb",
        "responses" : {
          "204" : {
            "description" : "EntitySet Web successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Web" ],
        "summary" : "Update entity Web",
        "description" : "Update an existing entity in EntitySet: Web",
        "operationId" : "updateWeb",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Web"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Web",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/WorkPlaceAddressInformation*" : {
      "get" : {
        "tags" : [ "WorkPlaceAddressInformation" ],
        "summary" : "Get WorkPlaceAddressInformation",
        "description" : "Returns the entity: WorkPlaceAddressInformation. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: WorkPlaceAddressInformation supports the following navigational properties: [to_Parent, to_WorkplaceAddress, to_OrganizationAddress]<br />For example: .../WorkPlaceAddressInformation(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getWorkPlaceAddressInformation",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet WorkPlaceAddressInformation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WorkPlaceAddressInformation"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/WorkPlaceAddressInformation({Id})*" : {
      "get" : {
        "tags" : [ "WorkPlaceAddressInformation" ],
        "summary" : "Get WorkPlaceAddressInformation on Id",
        "description" : "Returns the entity: WorkPlaceAddressInformation. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: WorkPlaceAddressInformation supports the following navigational properties: [to_Parent, to_WorkplaceAddress, to_OrganizationAddress]<br />For example: .../WorkPlaceAddressInformation(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getWorkPlaceAddressInformationId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "CreatedByUser"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet WorkPlaceAddressInformation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkPlaceAddressInformation"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "WorkPlaceAddressInformation" ],
        "summary" : "Create a new entity WorkPlaceAddressInformation",
        "description" : "Create a new entity in EntitySet: WorkPlaceAddressInformation",
        "operationId" : "createWorkPlaceAddressInformation",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkPlaceAddressInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet WorkPlaceAddressInformation",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "WorkPlaceAddressInformation" ],
        "summary" : "Delete WorkPlaceAddressInformation",
        "description" : "Delete entity in EntitySet WorkPlaceAddressInformation",
        "operationId" : "deleteWorkPlaceAddressInformation",
        "responses" : {
          "204" : {
            "description" : "EntitySet WorkPlaceAddressInformation successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "WorkPlaceAddressInformation" ],
        "summary" : "Update entity WorkPlaceAddressInformation",
        "description" : "Update an existing entity in EntitySet: WorkPlaceAddressInformation",
        "operationId" : "updateWorkPlaceAddressInformation",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkPlaceAddressInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet WorkPlaceAddressInformation",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/Workplace*" : {
      "get" : {
        "tags" : [ "Workplace" ],
        "summary" : "Get Workplace",
        "description" : "Returns the entity: Workplace. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Workplace supports the following navigational properties: [to_Parent]<br />For example: .../Workplace(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getWorkplace",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.5. Filter System Query Option ($filter)</a> for more information.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Order items by property values. See <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">4.2. Orderby System Query Option ($orderby)</a> for more information.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Show only the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip the first n items",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$inlinecount",
          "in" : "query",
          "description" : "Include count of items",
          "schema" : {
            "type" : "string",
            "enum" : [ "allpages", "none" ]
          }
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Workplace",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Workplace"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/Workplace({Id})*" : {
      "get" : {
        "tags" : [ "Workplace" ],
        "summary" : "Get Workplace on Id",
        "description" : "Returns the entity: Workplace. For more information using the query parameters please see: <a target=\"_blank\" href=\"https://www.odata.org/documentation/odata-version-2-0/uri-conventions/\">URI Conventions (OData Version 2.0)</a><br /><br />The entity: Workplace supports the following navigational properties: [to_Parent]<br />For example: .../Workplace(Entity-Id)/<b>to_Parent</b>/.....",
        "operationId" : "getWorkplaceId",
        "parameters" : [ {
          "name" : "$expand",
          "in" : "query",
          "description" : "The syntax of a $expand query option is a comma-separated list of Navigation Properties. Additionally each Navigation Property can be followed by a forward slash and another Navigation Property to enable identifying a multi-level relationship.",
          "schema" : {
            "type" : "string"
          },
          "example" : "to_Parent"
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "The value of a $select System Query Option is a comma-separated list of selection clauses. Each selection clause may be a Property name, Navigation Property name, or the \"*\" character.",
          "schema" : {
            "type" : "string"
          },
          "example" : "Parent_Id"
        }, {
          "name" : "$format",
          "in" : "query",
          "description" : "Response format if supported by the backend service.",
          "schema" : {
            "type" : "string",
            "enum" : [ "atom", "xml", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EntitySet Workplace",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workplace"
                }
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Workplace" ],
        "summary" : "Create a new entity Workplace",
        "description" : "Create a new entity in EntitySet: Workplace",
        "operationId" : "createWorkplace",
        "requestBody" : {
          "description" : "The entity to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Workplace"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "EntitySet Workplace",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Workplace" ],
        "summary" : "Delete Workplace",
        "description" : "Delete entity in EntitySet Workplace",
        "operationId" : "deleteWorkplace",
        "responses" : {
          "204" : {
            "description" : "EntitySet Workplace successfully deleted",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Workplace" ],
        "summary" : "Update entity Workplace",
        "description" : "Update an existing entity in EntitySet: Workplace",
        "operationId" : "updateWorkplace",
        "requestBody" : {
          "description" : "The entity to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Workplace"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "EntitySet Workplace",
            "content" : {
              "application/json" : { }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "Id",
        "in" : "path",
        "description" : "Id supports: Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    }
  },
  "components" : {
    "schemas" : {
      "GroupName" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ScriptCode" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "BusinessPartnerGroupName1" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "BusinessPartnerGroupName2" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "BusinessPartnerGroupType" : {
            "maxLength" : 4,
            "type" : "string"
          }
        }
      },
      "OrganizationName" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ScriptCode" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "FormOfAddress" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "LegalForm" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "FoundationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "LiquidationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "OrganizationName1" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "OrganizationName2" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "OrganizationName3" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "OrganizationName4" : {
            "maxLength" : 40,
            "type" : "string"
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "PrfrdCommMediumType" : {
            "maxLength" : 3,
            "type" : "string"
          }
        }
      },
      "AddressIndependentWebDummy" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultUri" : {
            "type" : "boolean"
          },
          "UriType" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "Uri" : {
            "maxLength" : 2048,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "SupplierPartnerFunction" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "PartnerFunction" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "DefaultPartner" : {
            "type" : "boolean"
          },
          "PartnerNumber" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "PartnerType" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "PartnerDescription" : {
            "maxLength" : 30,
            "type" : "string"
          }
        }
      },
      "AddressIndependentPhoneNumberDummy" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultPhoneNumber" : {
            "type" : "boolean"
          },
          "DestinationLocationCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Number" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "NumberType" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "NumberExtension" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "SMSEnabledIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "Customer" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Customer" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "CustomerCorporateGroup" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "CustomerAccountGroup" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "IsMarkedForDeletion" : {
            "type" : "boolean"
          },
          "OrderIsBlockedForCustomer" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "BillingIsBlockedForCustomer" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "CustomerClassification" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "DeliveryIsBlockedForCustomer" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "NielsenRegion" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "SalesBlockForCustomer" : {
            "type" : "boolean"
          },
          "IsStandardCustomer" : {
            "type" : "boolean"
          },
          "Address_Id" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "AddressInformation" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "Address_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "IsDeleted" : {
            "type" : "boolean"
          },
          "IsIndependent" : {
            "type" : "boolean"
          }
        }
      },
      "PaymentCard" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "PaymentCardID" : {
            "maxLength" : 6,
            "type" : "string"
          },
          "PaymentCardType" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "PaymentCardNumber" : {
            "maxLength" : 25,
            "type" : "string"
          },
          "IsStandardCard" : {
            "type" : "boolean"
          },
          "CardDescription" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "CardHolder" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "CardIssuingBank" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "CardCategory" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "PaymentCardLock" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "CardIssueDate" : {
            "type" : "string"
          }
        }
      },
      "BusinessPartner" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "BusinessPartner" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "Category" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "FullName" : {
            "maxLength" : 80,
            "type" : "string"
          },
          "AuthorizationGroup" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "SearchTerm1" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "SearchTerm2" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "IsBlocked" : {
            "type" : "boolean"
          },
          "IsMarkedForDeletion" : {
            "type" : "boolean"
          },
          "IsReleased" : {
            "type" : "boolean"
          },
          "IsBusinessPurposeCompleted" : {
            "type" : "boolean"
          },
          "Language" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "CorrespondenceLanguage" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Status" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "IsNaturalPerson" : {
            "type" : "boolean"
          },
          "BusinessPartnerGrouping" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "IAMId" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "ContactPermission" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "BusinessPartnerPrintFormat" : {
            "type" : "boolean"
          },
          "IsConsentGranted" : {
            "type" : "boolean"
          }
        }
      },
      "Identification" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IdentificationNumber" : {
            "maxLength" : 60,
            "type" : "string"
          },
          "IdentificationType" : {
            "maxLength" : 6,
            "type" : "string"
          },
          "EntryDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "Country" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Region" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "Institute" : {
            "maxLength" : 40,
            "type" : "string"
          }
        }
      },
      "BusinessPartnerBank" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "BankIdentification" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "BankAccount" : {
            "maxLength" : 18,
            "type" : "string"
          },
          "BankCountryKey" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "BankNumber" : {
            "maxLength" : 15,
            "type" : "string"
          },
          "BankControlKey" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "BankAccountName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "BankAccountHolderName" : {
            "maxLength" : 60,
            "type" : "string"
          },
          "IBAN" : {
            "maxLength" : 34,
            "type" : "string"
          },
          "IBANValidityStartDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "BankAccountReferenceText" : {
            "maxLength" : 20,
            "type" : "string"
          }
        }
      },
      "ContactPerson" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "VipPartner" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "Department" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "PartnerFunction" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "PartnerAuthority" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "Note" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "CustomerContactPerson" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "SupplierContactPerson" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "SalesTax" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Country" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "TaxCategory" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "TaxClassification" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "Customer_Id" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "AddressIndependentFaxNumber" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultFaxNumber" : {
            "type" : "boolean"
          },
          "DestinationLocationCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Number" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "NumberExtension" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "CommunicationDataText" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CommunicationLanguage" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "remark" : {
            "maxLength" : 50,
            "type" : "string"
          }
        }
      },
      "CustomerPartnerFunction" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "PartnerFunction" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "DefaultPartner" : {
            "type" : "boolean"
          },
          "PartnerNumber" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "PartnerType" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "PartnerDescription" : {
            "maxLength" : 30,
            "type" : "string"
          }
        }
      },
      "AddressUsage" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "AddressUsage" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "IsDefaultAddress" : {
            "type" : "boolean"
          },
          "Root_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "Address_Id" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "WorkPlaceAddressInformation" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "WorkplaceAddress_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "OrganizationAddress_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "IsDefaultAddress" : {
            "type" : "boolean"
          }
        }
      },
      "FaxNumber" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultFaxNumber" : {
            "type" : "boolean"
          },
          "DestinationLocationCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Number" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "NumberExtension" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          }
        }
      },
      "SubdivisionTexts" : {
        "type" : "object",
        "properties" : {
          "BusConfignVersion" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : false
          },
          "BusConfignIsDeleted" : {
            "type" : "boolean"
          },
          "CountryTwoLetterISOCode" : {
            "maxLength" : 2,
            "type" : "string",
            "nullable" : false
          },
          "CountrySubdivision" : {
            "maxLength" : 3,
            "type" : "string",
            "nullable" : false
          },
          "LanguageTwoLetterISOCode" : {
            "maxLength" : 2,
            "type" : "string",
            "nullable" : false
          },
          "CountrySubdivisionName" : {
            "maxLength" : 100,
            "type" : "string"
          }
        }
      },
      "Supplier" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Supplier" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "Customer" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "ResponsibleType" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "SupplierAccountGroup" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "DeletionIndicator" : {
            "type" : "boolean"
          },
          "PostingIsBlocked" : {
            "type" : "boolean"
          },
          "VATLiability" : {
            "type" : "boolean"
          },
          "IsStandardSupplier" : {
            "type" : "boolean"
          },
          "Address_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "AlternativePayee" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "PaymentIsBlockedForSupplier" : {
            "type" : "boolean"
          },
          "PurchasingIsBlocked" : {
            "type" : "boolean"
          }
        }
      },
      "TaxNumber" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "TaxNumberCategory" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "TaxNumber" : {
            "maxLength" : 60,
            "type" : "string"
          }
        }
      },
      "PersonName" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ScriptCode" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "FormOfAddress" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "Gender" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "Nationality" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "AcademicTitle" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "AdditionalAcademicTitle" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "LastNamePrefix" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "AdditionalNamePrefix" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "NameSupplement" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "NameCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "NameFormat" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "FirstName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "MiddleName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "LastName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "AdditionalLastName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "BirthName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "NickName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "Initials" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "BirthDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "MaritalStatus" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "NaturalPersonEmployerName" : {
            "maxLength" : 35,
            "type" : "string"
          },
          "BusinessPartnerOccupationGroup" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "BusinessPartnerBirthplaceName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "BusinessPartnerDeathDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Subdivisions" : {
        "type" : "object",
        "properties" : {
          "BusConfignVersion" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : false
          },
          "BusConfignIsDeleted" : {
            "type" : "boolean"
          },
          "CountryTwoLetterISOCode" : {
            "maxLength" : 2,
            "type" : "string",
            "nullable" : false
          },
          "CountrySubdivision" : {
            "maxLength" : 3,
            "type" : "string",
            "nullable" : false
          },
          "CountrySubdivisionType" : {
            "maxLength" : 50,
            "type" : "string"
          },
          "CountrySubdivisionRegionaldivision" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "CountrySubdivisionRomanizationSystem" : {
            "maxLength" : 200,
            "type" : "string"
          }
        }
      },
      "AddressIndependentWeb" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultUri" : {
            "type" : "boolean"
          },
          "UriType" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "Uri" : {
            "maxLength" : 2048,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "AddressOrganizationName" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 12,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 12,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ScriptCode" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "FormOfAddress" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "LegalForm" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "FoundationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "LiquidationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "OrganizationName1" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "OrganizationName2" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "OrganizationName3" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "OrganizationName4" : {
            "maxLength" : 40,
            "type" : "string"
          }
        }
      },
      "AddressPersonName" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 12,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 12,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ScriptCode" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "FormOfAddress" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "Gender" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "AcademicTitle" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "AdditionalAcademicTitle" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "LastNamePrefix" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "AdditionalNamePrefix" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "NameSupplement" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "NameCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "NameFormat" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "FirstName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "MiddleName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "LastName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "AdditionalLastName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "BirthName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "NickName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "Initials" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "FullName" : {
            "maxLength" : 80,
            "type" : "string"
          },
          "BirthDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BusinessPartnerWithConsent" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "BusinessPartnerCategory" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "BusinessPartnerNumber" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "OrganizationName1" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "LastName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "ConsentTemplateName" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "ConsentTemplateId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ConsentId" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      },
      "CountryTexts" : {
        "type" : "object",
        "properties" : {
          "BusConfignVersion" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : false
          },
          "BusConfignIsDeleted" : {
            "type" : "boolean"
          },
          "CountryTwoLetterISOCode" : {
            "maxLength" : 2,
            "type" : "string",
            "nullable" : false
          },
          "LanguageTwoLetterISOCode" : {
            "maxLength" : 2,
            "type" : "string",
            "nullable" : false
          },
          "CountryISOShortName" : {
            "maxLength" : 100,
            "type" : "string"
          },
          "CountryISOFullName" : {
            "maxLength" : 200,
            "type" : "string"
          }
        }
      },
      "IndustrySector" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "IndustrySector" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "IndustrySystemType" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "IsDefaultIndustry" : {
            "type" : "boolean"
          }
        }
      },
      "SalesArea" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "SalesOrganization" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "DistributionChannel" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Division" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "IsMarkedForDeletion" : {
            "type" : "boolean"
          },
          "OrderIsBlockedForCustomer" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "DeliveryIsBlockedForCustomer" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "BillingIsBlockedForCustomer" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "CompleteDeliveryIsDefined" : {
            "type" : "boolean"
          },
          "PartialDeliveryIsAllowed" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "IncotermsClassification" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "IncotermsTransferLocation" : {
            "maxLength" : 28,
            "type" : "string"
          },
          "Currency" : {
            "maxLength" : 5,
            "type" : "string"
          },
          "PaymentTerms" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "CustomerPriceGroup" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "CustomerGroup" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "DeliveryPriority" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "SalesGroup" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "SalesOffice" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "SalesBlockForCustomer" : {
            "type" : "boolean"
          }
        }
      },
      "AddressIndependentEmail" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultEmailAddress" : {
            "type" : "boolean"
          },
          "EmailAddress" : {
            "maxLength" : 241,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "Workplace" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ScriptCode" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "FunctionalTitleName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "DepartmentName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "Building" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "Floor" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "Room" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "CorrespondenceShortName" : {
            "maxLength" : 30,
            "type" : "string"
          }
        }
      },
      "SupplierPurchasingOrg" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "PurchasingOrganization" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "PurchaseOrderCurrency" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "PaymentTerms" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "IncotermsClassification" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "IncotermsTransferLocation" : {
            "maxLength" : 28,
            "type" : "string"
          },
          "CalculationSchemaGroupCode" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "PurchasingGroup" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "PurchasingIsBlockedForSupplier" : {
            "type" : "boolean"
          },
          "DeletionIndicator" : {
            "type" : "boolean"
          },
          "PurOrdAutoGenerationIsAllowed" : {
            "type" : "boolean"
          },
          "SupplierABCClassificationCode" : {
            "maxLength" : 1,
            "type" : "string"
          }
        }
      },
      "EmailAddress" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultEmailAddress" : {
            "type" : "boolean"
          },
          "EmailAddress" : {
            "maxLength" : 241,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          }
        }
      },
      "PostalAddress" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ScriptCode" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "CorrespondenceLanguage" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "PoBox" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "PoBoxIsWithoutNumber" : {
            "type" : "boolean"
          },
          "PoBoxPostalCode" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "PoBoxDeviatingCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "PoBoxDeviatingRegion" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "PostalCode" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "CompanyPostalCode" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "StreetName" : {
            "maxLength" : 60,
            "type" : "string"
          },
          "StreetPrefixName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "AdditionalStreetPrefixName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "StreetSuffixName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "AdditionalStreetSuffixName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "HouseNumber" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "HouseNumberSupplementText" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "CityCode" : {
            "maxLength" : 12,
            "type" : "string"
          },
          "CityName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "AdditionalCityName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "District" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "Country" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Region" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "AddressTimeZone" : {
            "maxLength" : 6,
            "type" : "string"
          },
          "County" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "Building" : {
            "maxLength" : 20,
            "type" : "string"
          },
          "Floor" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "RoomNumber" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "CareOfName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "PoBoxLobbyName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "PoBoxDeviatingCityName" : {
            "maxLength" : 40,
            "type" : "string"
          },
          "Latitude" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Longitude" : {
            "type" : "integer",
            "format" : "int32"
          },
          "DeliveryServiceNumber" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "DeliveryServiceTypeCode" : {
            "maxLength" : 4,
            "type" : "string"
          }
        }
      },
      "Role" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "Role" : {
            "maxLength" : 6,
            "type" : "string"
          }
        }
      },
      "AddressIndependentFaxNumberDummy" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultFaxNumber" : {
            "type" : "boolean"
          },
          "DestinationLocationCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Number" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "NumberExtension" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "AddressIndependentEmailAddressDummy" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultEmailAddress" : {
            "type" : "boolean"
          },
          "EmailAddress" : {
            "maxLength" : 241,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "C_Countries" : {
        "type" : "object",
        "properties" : {
          "BusConfignVersion" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : false
          },
          "CountryTwoLetterISOCode" : {
            "maxLength" : 2,
            "type" : "string",
            "nullable" : false
          },
          "CountryThreeLetterISOCode" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "CountryThreeDigitISOCode" : {
            "maxLength" : 3,
            "type" : "string"
          }
        }
      },
      "Web" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultUri" : {
            "type" : "boolean"
          },
          "UriType" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "Uri" : {
            "maxLength" : 2048,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          }
        }
      },
      "BusinessPartnerWhldgTax" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "WithholdingTaxType" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "WithholdingTaxCode" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "WithholdingTaxNumber" : {
            "maxLength" : 16,
            "type" : "string"
          },
          "WithholdingTaxCertificate" : {
            "maxLength" : 25,
            "type" : "string"
          },
          "WithholdingTaxExmptPercent" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ExemptionReason" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "ExemptionDateBegin" : {
            "type" : "string"
          },
          "ExemptionDateEnd" : {
            "type" : "string"
          },
          "RecipientType" : {
            "maxLength" : 2,
            "type" : "string"
          }
        }
      },
      "PhoneNumber" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultPhoneNumber" : {
            "type" : "boolean"
          },
          "DestinationLocationCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Number" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "NumberType" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "NumberExtension" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "SMSEnabledIndicator" : {
            "type" : "boolean"
          }
        }
      },
      "AddressIndependentPhoneNumber" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "IsDefaultPhoneNumber" : {
            "type" : "boolean"
          },
          "DestinationLocationCountry" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "Number" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "NumberType" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "NumberExtension" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "UsageDeniedIndicator" : {
            "type" : "boolean"
          },
          "SMSEnabledIndicator" : {
            "type" : "boolean"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          }
        }
      },
      "AddressIndependentCommunication" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "IsDeleted" : {
            "type" : "boolean"
          },
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "AddressType" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "IsIndependent" : {
            "type" : "boolean"
          },
          "PrfrdCommMediumType" : {
            "maxLength" : 3,
            "type" : "string"
          }
        }
      },
      "SupplierCompany" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "Parent_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "CompanyCode" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "ReconciliationAccount" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "LayoutSortingRule" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "MinorityGroup" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "DeletionIndicator" : {
            "type" : "boolean"
          },
          "SupplierIsBlockedForPosting" : {
            "type" : "boolean"
          },
          "PaymentBlockingReason" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "PaymentTerms" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "IsDoubleInvoice" : {
            "type" : "boolean"
          },
          "PaymentMethodsList" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "HouseBank" : {
            "maxLength" : 5,
            "type" : "string"
          },
          "CashPlanningGroup" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "AccountingClerk" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "AccountingClerkInternetAddress" : {
            "maxLength" : 130,
            "type" : "string"
          },
          "AccountingClerkPhoneNumber" : {
            "maxLength" : 30,
            "type" : "string"
          },
          "AlternativePayee" : {
            "maxLength" : 10,
            "type" : "string"
          },
          "APARToleranceGroup" : {
            "maxLength" : 4,
            "type" : "string"
          },
          "ClearCustomerSupplier" : {
            "type" : "boolean"
          }
        }
      },
      "BusinessPartnerRelationship" : {
        "type" : "object",
        "properties" : {
          "CreatedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "CreationDate" : {
            "type" : "string"
          },
          "LastChangedByUser" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "LastChangeDate" : {
            "type" : "string"
          },
          "ValidityStartDate" : {
            "type" : "string"
          },
          "ValidityEndDate" : {
            "type" : "string"
          },
          "Id" : {
            "type" : "string",
            "format" : "uuid",
            "nullable" : false
          },
          "RelationshipCategory" : {
            "maxLength" : 6,
            "type" : "string"
          },
          "IsDefault" : {
            "type" : "boolean"
          },
          "Status" : {
            "maxLength" : 2,
            "type" : "string"
          },
          "FirstBusinessPartner_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "SecondBusinessPartner_Id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "IsDeleted" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}