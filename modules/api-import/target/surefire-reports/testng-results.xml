<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="68" passed="68">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="6397" started-at="2020-04-30T16:50:52Z" finished-at="2020-04-30T16:50:58Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="6397" started-at="2020-04-30T16:50:52Z" finished-at="2020-04-30T16:50:58Z">
      <class name="com.axway.apim.api.definition.APISpecificationOpenAPI3xTest">
        <test-method status="PASS" signature="initTestIndicator()[pri:0, instance:com.axway.apim.api.definition.APISpecificationOpenAPI3xTest@5c30a9b0]" name="initTestIndicator" is-config="true" duration-ms="14" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTestIndicator -->
        <test-method status="PASS" signature="backendHostAndBasePath()[pri:0, instance:com.axway.apim.api.definition.APISpecificationOpenAPI3xTest@5c30a9b0]" name="backendHostAndBasePath" duration-ms="86" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backendHostAndBasePath -->
      </class> <!-- com.axway.apim.api.definition.APISpecificationOpenAPI3xTest -->
      <class name="com.axway.apim.api.definition.APISpecificationSwagger2xTest">
        <test-method status="PASS" signature="initTestIndicator()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger2xTest@1139b2f3]" name="initTestIndicator" is-config="true" duration-ms="1" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTestIndicator -->
        <test-method status="PASS" signature="backendBasepathChangesNothing()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger2xTest@1139b2f3]" name="backendBasepathChangesNothing" duration-ms="12" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backendBasepathChangesNothing -->
        <test-method status="PASS" signature="backendHostAndBasePath()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger2xTest@1139b2f3]" name="backendHostAndBasePath" duration-ms="8" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backendHostAndBasePath -->
        <test-method status="PASS" signature="backendHostBasisBasePath()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger2xTest@1139b2f3]" name="backendHostBasisBasePath" duration-ms="5" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backendHostBasisBasePath -->
        <test-method status="PASS" signature="backendHostOnly()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger2xTest@1139b2f3]" name="backendHostOnly" duration-ms="5" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backendHostOnly -->
        <test-method status="PASS" signature="swaggerWithoutSchemes()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger2xTest@1139b2f3]" name="swaggerWithoutSchemes" duration-ms="7" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- swaggerWithoutSchemes -->
        <test-method status="PASS" signature="testWithoutBackendBasepath()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger2xTest@1139b2f3]" name="testWithoutBackendBasepath" duration-ms="8" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutBackendBasepath -->
      </class> <!-- com.axway.apim.api.definition.APISpecificationSwagger2xTest -->
      <class name="com.axway.apim.test.cacerts.CertFilenameTest">
        <test-method status="PASS" signature="testAliasOne()[pri:0, instance:com.axway.apim.test.cacerts.CertFilenameTest@1817d444]" name="testAliasOne" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAliasOne -->
        <test-method status="PASS" signature="testAliasUnknown()[pri:0, instance:com.axway.apim.test.cacerts.CertFilenameTest@1817d444]" name="testAliasUnknown" duration-ms="3" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAliasUnknown -->
      </class> <!-- com.axway.apim.test.cacerts.CertFilenameTest -->
      <class name="com.axway.apim.test.basic.APIImportConfigTest">
        <test-method status="PASS" signature="testHttpUriCheck()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigTest@3f197a46]" name="testHttpUriCheck" duration-ms="19" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHttpUriCheck -->
      </class> <!-- com.axway.apim.test.basic.APIImportConfigTest -->
      <class name="com.axway.apim.test.basic.ExistingAPITest">
        <test-method status="PASS" signature="duplicateVHost()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="duplicateVHost" duration-ms="14" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- duplicateVHost -->
        <test-method status="PASS" signature="getUniqueWithRoutingKeyNotOkay()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="getUniqueWithRoutingKeyNotOkay" duration-ms="7" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <exception class="com.axway.apim.lib.errorHandling.AppException">
            <message>
              <![CDATA[No unique API found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.axway.apim.lib.errorHandling.AppException: No unique API found
	at com.axway.apim.adapter.Proxies.uniqueAPI(Proxies.java:78)
	at com.axway.apim.adapter.Proxies.getAPI(Proxies.java:73)
	at com.axway.apim.test.basic.ExistingAPITest.getUniqueWithRoutingKeyNotOkay(ExistingAPITest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- com.axway.apim.lib.errorHandling.AppException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUniqueWithRoutingKeyNotOkay -->
        <test-method status="PASS" signature="getUniqueWithRoutingKeyOK()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="getUniqueWithRoutingKeyOK" duration-ms="3" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUniqueWithRoutingKeyOK -->
        <test-method status="PASS" signature="getUniqueWithRoutingKeyOK2()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="getUniqueWithRoutingKeyOK2" duration-ms="3" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUniqueWithRoutingKeyOK2 -->
        <test-method status="PASS" signature="getUniqueWithRoutingKeyVHostOK()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="getUniqueWithRoutingKeyVHostOK" duration-ms="2" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUniqueWithRoutingKeyVHostOK -->
        <test-method status="PASS" signature="getUniqueWithRoutingKeyVHostOK2()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="getUniqueWithRoutingKeyVHostOK2" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUniqueWithRoutingKeyVHostOK2 -->
        <test-method status="PASS" signature="nonExistingAPI()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="nonExistingAPI" duration-ms="6" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonExistingAPI -->
        <test-method status="PASS" signature="nonExistingUniqueAPI()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="nonExistingUniqueAPI" duration-ms="4" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonExistingUniqueAPI -->
        <test-method status="PASS" signature="nothingGivenToFilterTest()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="nothingGivenToFilterTest" duration-ms="11" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nothingGivenToFilterTest -->
        <test-method status="PASS" signature="reponseContainsOneAPIOnly()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="reponseContainsOneAPIOnly" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reponseContainsOneAPIOnly -->
        <test-method status="PASS" signature="restrictedOnVHost()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="restrictedOnVHost" duration-ms="4" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restrictedOnVHost -->
        <test-method status="PASS" signature="resultMustBeUniqueButIsNot()[pri:0, instance:com.axway.apim.test.basic.ExistingAPITest@636be97c]" name="resultMustBeUniqueButIsNot" duration-ms="6" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <exception class="com.axway.apim.lib.errorHandling.AppException">
            <message>
              <![CDATA[No unique API found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.axway.apim.lib.errorHandling.AppException: No unique API found
	at com.axway.apim.adapter.Proxies.uniqueAPI(Proxies.java:78)
	at com.axway.apim.adapter.Proxies.getAPI(Proxies.java:73)
	at com.axway.apim.test.basic.ExistingAPITest.resultMustBeUniqueButIsNot(ExistingAPITest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- com.axway.apim.lib.errorHandling.AppException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resultMustBeUniqueButIsNot -->
      </class> <!-- com.axway.apim.test.basic.ExistingAPITest -->
      <class name="com.axway.apim.test.lib.ErrorCodeMapperTest">
        <test-method status="PASS" signature="testMapper1()[pri:0, instance:com.axway.apim.test.lib.ErrorCodeMapperTest@4facf68f]" name="testMapper1" duration-ms="1" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapper1 -->
        <test-method status="PASS" signature="testMapper2()[pri:0, instance:com.axway.apim.test.lib.ErrorCodeMapperTest@4facf68f]" name="testMapper2" duration-ms="0" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapper2 -->
        <test-method status="PASS" signature="testMapper5()[pri:0, instance:com.axway.apim.test.lib.ErrorCodeMapperTest@4facf68f]" name="testMapper5" duration-ms="1" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapper5 -->
        <test-method status="PASS" signature="testMapper4()[pri:0, instance:com.axway.apim.test.lib.ErrorCodeMapperTest@4facf68f]" name="testMapper4" duration-ms="0" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapper4 -->
        <test-method status="PASS" signature="testMapper3()[pri:0, instance:com.axway.apim.test.lib.ErrorCodeMapperTest@4facf68f]" name="testMapper3" duration-ms="0" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapper3 -->
      </class> <!-- com.axway.apim.test.lib.ErrorCodeMapperTest -->
      <class name="com.axway.apim.test.changestate.ChangeStateTest">
        <test-method status="PASS" signature="prepareTest()[pri:0, instance:com.axway.apim.test.changestate.ChangeStateTest@6ca8564a]" name="prepareTest" is-config="true" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareTest -->
        <test-method status="PASS" signature="isVhostBreaking()[pri:0, instance:com.axway.apim.test.changestate.ChangeStateTest@6ca8564a]" name="isVhostBreaking" duration-ms="13" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isVhostBreaking -->
        <test-method status="PASS" signature="testOrderMakesNoChange()[pri:0, instance:com.axway.apim.test.changestate.ChangeStateTest@6ca8564a]" name="testOrderMakesNoChange" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderMakesNoChange -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.axway.apim.test.changestate.ChangeStateTest@6ca8564a]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.axway.apim.test.changestate.ChangeStateTest -->
      <class name="com.axway.apim.api.definition.APISpecificationWSDLTest">
        <test-method status="PASS" signature="initTestIndicator()[pri:0, instance:com.axway.apim.api.definition.APISpecificationWSDLTest@7a69b07]" name="initTestIndicator" is-config="true" duration-ms="1" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTestIndicator -->
        <test-method status="PASS" signature="isWSDLSpecification()[pri:0, instance:com.axway.apim.api.definition.APISpecificationWSDLTest@7a69b07]" name="isWSDLSpecification" duration-ms="20" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isWSDLSpecification -->
      </class> <!-- com.axway.apim.api.definition.APISpecificationWSDLTest -->
      <class name="com.axway.apim.api.definition.APISpecificationSwagger1xTest">
        <test-method status="PASS" signature="initTestIndicator()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger1xTest@1ddf84b8]" name="initTestIndicator" is-config="true" duration-ms="1" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTestIndicator -->
        <test-method status="PASS" signature="includingBasePath()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger1xTest@1ddf84b8]" name="includingBasePath" duration-ms="2" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- includingBasePath -->
        <test-method status="PASS" signature="specificPort()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger1xTest@1ddf84b8]" name="specificPort" duration-ms="2" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- specificPort -->
        <test-method status="PASS" signature="standardPort()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger1xTest@1ddf84b8]" name="standardPort" duration-ms="1" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- standardPort -->
        <test-method status="PASS" signature="standardPortGiven()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger1xTest@1ddf84b8]" name="standardPortGiven" duration-ms="2" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- standardPortGiven -->
        <test-method status="PASS" signature="testSwagger11Specification()[pri:0, instance:com.axway.apim.api.definition.APISpecificationSwagger1xTest@1ddf84b8]" name="testSwagger11Specification" duration-ms="5" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwagger11Specification -->
      </class> <!-- com.axway.apim.api.definition.APISpecificationSwagger1xTest -->
      <class name="com.axway.apim.test.customproperties.AppConfigParserTest">
        <test-method status="PASS" signature="testAppConfigIssue122Parser()[pri:0, instance:com.axway.apim.test.customproperties.AppConfigParserTest@31368b99]" name="testAppConfigIssue122Parser" duration-ms="5" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppConfigIssue122Parser -->
        <test-method status="PASS" signature="testAppConfigIssue79Parser()[pri:0, instance:com.axway.apim.test.customproperties.AppConfigParserTest@31368b99]" name="testAppConfigIssue79Parser" duration-ms="5" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppConfigIssue79Parser -->
        <test-method status="PASS" signature="testAppConfigParser()[pri:0, instance:com.axway.apim.test.customproperties.AppConfigParserTest@31368b99]" name="testAppConfigParser" duration-ms="19" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppConfigParser -->
      </class> <!-- com.axway.apim.test.customproperties.AppConfigParserTest -->
      <class name="com.axway.apim.test.basic.APIImportConfigAdapterTest">
        <test-method status="PASS" signature="cleanSingletons()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="cleanSingletons" is-config="true" duration-ms="2" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSingletons -->
        <test-method status="PASS" signature="configFileWithSpaces()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="configFileWithSpaces" duration-ms="317" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configFileWithSpaces -->
        <test-method status="PASS" signature="cleanSingletons()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="cleanSingletons" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSingletons -->
        <test-method status="PASS" signature="notDeclaredVariable()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="notDeclaredVariable" duration-ms="36" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notDeclaredVariable -->
        <test-method status="PASS" signature="cleanSingletons()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="cleanSingletons" is-config="true" duration-ms="1" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSingletons -->
        <test-method status="PASS" signature="stageConfigInSubDirectory()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="stageConfigInSubDirectory" duration-ms="29" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stageConfigInSubDirectory -->
        <test-method status="PASS" signature="cleanSingletons()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="cleanSingletons" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSingletons -->
        <test-method status="PASS" signature="usingOSEnvVariable()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="usingOSEnvVariable" duration-ms="31" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingOSEnvVariable -->
        <test-method status="PASS" signature="cleanSingletons()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="cleanSingletons" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSingletons -->
        <test-method status="PASS" signature="withStage()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="withStage" duration-ms="26" started-at="2020-04-30T18:50:52Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withStage -->
        <test-method status="PASS" signature="cleanSingletons()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="cleanSingletons" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSingletons -->
        <test-method status="PASS" signature="withoutStage()[pri:0, instance:com.axway.apim.test.basic.APIImportConfigAdapterTest@5e82df6a]" name="withoutStage" duration-ms="26" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutStage -->
      </class> <!-- com.axway.apim.test.basic.APIImportConfigAdapterTest -->
      <class name="com.axway.apim.test.image.ImageComparisionTest">
        <test-method status="PASS" signature="testLargeImage()[pri:0, instance:com.axway.apim.test.image.ImageComparisionTest@4ac3c60d]" name="testLargeImage" duration-ms="565" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLargeImage -->
        <test-method status="PASS" signature="testMediumImage()[pri:0, instance:com.axway.apim.test.image.ImageComparisionTest@4ac3c60d]" name="testMediumImage" duration-ms="116" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMediumImage -->
        <test-method status="PASS" signature="testOrigVsProcessedImageSmall()[pri:0, instance:com.axway.apim.test.image.ImageComparisionTest@4ac3c60d]" name="testOrigVsProcessedImageSmall" duration-ms="16" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrigVsProcessedImageSmall -->
        <test-method status="PASS" signature="testSameImage()[pri:0, instance:com.axway.apim.test.image.ImageComparisionTest@4ac3c60d]" name="testSameImage" duration-ms="19" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameImage -->
        <test-method status="PASS" signature="testSlightlyChangedImage()[pri:0, instance:com.axway.apim.test.image.ImageComparisionTest@4ac3c60d]" name="testSlightlyChangedImage" duration-ms="16" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSlightlyChangedImage -->
      </class> <!-- com.axway.apim.test.image.ImageComparisionTest -->
      <class name="com.axway.apim.test.envProperties.EnvPropertiesTest">
        <test-method status="PASS" signature="testNoStage()[pri:0, instance:com.axway.apim.test.envProperties.EnvPropertiesTest@1725dc0f]" name="testNoStage" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoStage -->
        <test-method status="PASS" signature="testNoStageFromConfDir()[pri:0, instance:com.axway.apim.test.envProperties.EnvPropertiesTest@1725dc0f]" name="testNoStageFromConfDir" duration-ms="4" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoStageFromConfDir -->
        <test-method status="PASS" signature="testStage()[pri:0, instance:com.axway.apim.test.envProperties.EnvPropertiesTest@1725dc0f]" name="testStage" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStage -->
        <test-method status="PASS" signature="testStageFromConfDir()[pri:0, instance:com.axway.apim.test.envProperties.EnvPropertiesTest@1725dc0f]" name="testStageFromConfDir" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStageFromConfDir -->
      </class> <!-- com.axway.apim.test.envProperties.EnvPropertiesTest -->
      <class name="com.axway.apim.test.envProperties.SubstituteVariablesTest">
        <test-method status="PASS" signature="initCommandParameters()[pri:0, instance:com.axway.apim.test.envProperties.SubstituteVariablesTest@3911c2a7]" name="initCommandParameters" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initCommandParameters -->
        <test-method status="PASS" signature="validateBaseEnvReplacedOSAttribute()[pri:0, instance:com.axway.apim.test.envProperties.SubstituteVariablesTest@3911c2a7]" name="validateBaseEnvReplacedOSAttribute" duration-ms="49" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBaseEnvReplacedOSAttribute -->
        <test-method status="PASS" signature="validateStageEnvOveridesAll()[pri:0, instance:com.axway.apim.test.envProperties.SubstituteVariablesTest@3911c2a7]" name="validateStageEnvOveridesAll" duration-ms="33" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStageEnvOveridesAll -->
        <test-method status="PASS" signature="validateSystemOSAreSubstituted()[pri:0, instance:com.axway.apim.test.envProperties.SubstituteVariablesTest@3911c2a7]" name="validateSystemOSAreSubstituted" duration-ms="26" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystemOSAreSubstituted -->
      </class> <!-- com.axway.apim.test.envProperties.SubstituteVariablesTest -->
      <class name="com.axway.apim.test.basic.ManagerVersionCheckTest">
        <test-method status="PASS" signature="isVersionWithAPIManager753()[pri:0, instance:com.axway.apim.test.basic.ManagerVersionCheckTest@50a638b5]" name="isVersionWithAPIManager753" duration-ms="12" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isVersionWithAPIManager753 -->
        <test-method status="PASS" signature="isVersionWithAPIManager762()[pri:0, instance:com.axway.apim.test.basic.ManagerVersionCheckTest@50a638b5]" name="isVersionWithAPIManager762" duration-ms="5" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isVersionWithAPIManager762 -->
        <test-method status="PASS" signature="isVersionWithAPIManager77()[pri:0, instance:com.axway.apim.test.basic.ManagerVersionCheckTest@50a638b5]" name="isVersionWithAPIManager77" duration-ms="2" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isVersionWithAPIManager77 -->
        <test-method status="PASS" signature="isVersionWithAPIManager7720200130()[pri:0, instance:com.axway.apim.test.basic.ManagerVersionCheckTest@50a638b5]" name="isVersionWithAPIManager7720200130" duration-ms="4" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isVersionWithAPIManager7720200130 -->
        <test-method status="PASS" signature="isVersionWithAPIManager7720200331()[pri:0, instance:com.axway.apim.test.basic.ManagerVersionCheckTest@50a638b5]" name="isVersionWithAPIManager7720200331" duration-ms="14" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isVersionWithAPIManager7720200331 -->
      </class> <!-- com.axway.apim.test.basic.ManagerVersionCheckTest -->
      <class name="com.axway.apim.test.changestate.RetirementDateParserTest">
        <test-method status="PASS" signature="testInvalidRetirementDate1()[pri:0, instance:com.axway.apim.test.changestate.RetirementDateParserTest@50b472aa]" name="testInvalidRetirementDate1" duration-ms="11" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <exception class="com.axway.apim.lib.errorHandling.AppException">
            <message>
              <![CDATA[Cannnot parse given retirementDate]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.axway.apim.lib.errorHandling.AppException: Cannnot parse given retirementDate
	at com.axway.apim.apiimport.DesiredAPI.setRetirementDate(DesiredAPI.java:156)
	at com.axway.apim.test.changestate.RetirementDateParserTest.testInvalidRetirementDate1(RetirementDateParserTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- com.axway.apim.lib.errorHandling.AppException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidRetirementDate1 -->
        <test-method status="PASS" signature="testInvalidRetirementDate2()[pri:0, instance:com.axway.apim.test.changestate.RetirementDateParserTest@50b472aa]" name="testInvalidRetirementDate2" duration-ms="1" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <exception class="com.axway.apim.lib.errorHandling.AppException">
            <message>
              <![CDATA[Cannnot parse given retirementDate]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.axway.apim.lib.errorHandling.AppException: Cannnot parse given retirementDate
	at com.axway.apim.apiimport.DesiredAPI.setRetirementDate(DesiredAPI.java:156)
	at com.axway.apim.test.changestate.RetirementDateParserTest.testInvalidRetirementDate2(RetirementDateParserTest.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:147)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- com.axway.apim.lib.errorHandling.AppException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidRetirementDate2 -->
        <test-method status="PASS" signature="testValidRetirementDates()[pri:0, instance:com.axway.apim.test.changestate.RetirementDateParserTest@50b472aa]" name="testValidRetirementDates" duration-ms="21" started-at="2020-04-30T18:50:53Z" finished-at="2020-04-30T18:50:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidRetirementDates -->
      </class> <!-- com.axway.apim.test.changestate.RetirementDateParserTest -->
      <class name="com.axway.apim.test.security.PrivateKeystoreLoadTest">
        <test-method status="PASS" signature="testInvalidKeystoreType()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="testInvalidKeystoreType" duration-ms="2761" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidKeystoreType -->
        <test-method status="PASS" signature="setupAuthenticationProfile()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="setupAuthenticationProfile" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAuthenticationProfile -->
        <test-method status="PASS" signature="initTestIndicator()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="initTestIndicator" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:54Z" finished-at="2020-04-30T18:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initTestIndicator -->
        <test-method status="PASS" signature="testInvalidPasswordKeystoreFile()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="testInvalidPasswordKeystoreFile" duration-ms="594" started-at="2020-04-30T18:50:56Z" finished-at="2020-04-30T18:50:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPasswordKeystoreFile -->
        <test-method status="PASS" signature="setupAuthenticationProfile()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="setupAuthenticationProfile" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:56Z" finished-at="2020-04-30T18:50:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAuthenticationProfile -->
        <test-method status="PASS" signature="testWorkingKeystoreFile()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="testWorkingKeystoreFile" duration-ms="696" started-at="2020-04-30T18:50:57Z" finished-at="2020-04-30T18:50:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWorkingKeystoreFile -->
        <test-method status="PASS" signature="setupAuthenticationProfile()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="setupAuthenticationProfile" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:57Z" finished-at="2020-04-30T18:50:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAuthenticationProfile -->
        <test-method status="PASS" signature="setupAuthenticationProfile()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="setupAuthenticationProfile" is-config="true" duration-ms="0" started-at="2020-04-30T18:50:58Z" finished-at="2020-04-30T18:50:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAuthenticationProfile -->
        <test-method status="PASS" signature="testvalidKeystoreType()[pri:0, instance:com.axway.apim.test.security.PrivateKeystoreLoadTest@76508ed1]" name="testvalidKeystoreType" duration-ms="597" started-at="2020-04-30T18:50:58Z" finished-at="2020-04-30T18:50:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testvalidKeystoreType -->
      </class> <!-- com.axway.apim.test.security.PrivateKeystoreLoadTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
